{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ResourceSavingScene;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _excluded = [\"visible\", \"children\", \"style\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar FAR_FAR_AWAY = 30000;\nfunction ResourceSavingScene(_ref) {\n  var visible = _ref.visible,\n    children = _ref.children,\n    style = _ref.style,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  if (_reactNative.Platform.OS === 'web') {\n    return React.createElement(_reactNative.View, _extends({\n      hidden: !visible,\n      style: [{\n        display: visible ? 'flex' : 'none'\n      }, styles.container, style],\n      pointerEvents: visible ? 'auto' : 'none'\n    }, rest), children);\n  }\n  return React.createElement(_reactNative.View, {\n    style: [styles.container, style],\n    pointerEvents: visible ? 'auto' : 'none'\n  }, React.createElement(_reactNative.View, {\n    collapsable: false,\n    removeClippedSubviews: _reactNative.Platform.OS === 'ios' || _reactNative.Platform.OS === 'macos' ? !visible : true,\n    pointerEvents: visible ? 'auto' : 'none',\n    style: visible ? styles.attached : styles.detached\n  }, children));\n}\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});","map":{"version":3,"sources":["ResourceSavingView.tsx"],"names":["FAR_FAR_AWAY","ResourceSavingScene","visible","children","style","rest","Platform","OS","display","styles","container","attached","detached","StyleSheet","create","flex","overflow","top"],"mappings":";;;;;;AAAA;AACA;AAA+E;AAAA;AAAA;;;;;;;;;;;;;;;AAQ/E,IAAMA,YAAY,GAAG,KAAK;AAEX,SAASC,mBAAmB,CAAA,IAAA,EAKjC;EALkC,IAC1CC,OAAO,GAID,IAAA,CAJNA,OAAO;IACPC,QAAQ,GAGF,IAAA,CAHNA,QAAQ;IACRC,KAAK,GAEC,IAAA,CAFNA,KAAK;IACFC,IAAAA,0CACG,IAAA;EACN,IAAIC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACzB,OACE,KAAA,CAAA,aAAA,CAAC,iBAAA,EACC,QAAA,CAAA;MACA,MAAM,EAAE,CAACL,OAAQ;MACjB,KAAK,EAAE,CACL;QAAEM,OAAO,EAAEN,OAAO,GAAG,MAAM,GAAG;MAAO,CAAC,EACtCO,MAAM,CAACC,SAAS,EAChBN,KAAK,CACL;MACF,aAAa,EAAEF,OAAO,GAAG,MAAM,GAAG;IAAO,CAAA,EACrCG,IAAI,CAAA,EAEPF,QAAQ,CACJ;EAEX;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,iBAAI,EAAA;IACH,KAAK,EAAE,CAACM,MAAM,CAACC,SAAS,EAAEN,KAAK,CAAA;IAE/B,aAAa,EAAEF,OAAO,GAAG,MAAM,GAAG;EAAO,CAAA,EAEzC,KAAA,CAAA,aAAA,CAAC,iBAAI,EAAA;IACH,WAAW,EAAE,KAAM;IACnB,qBAAqB,EAGnBI,qBAAQ,CAACC,EAAE,KAAK,KAAK,IAAID,qBAAQ,CAACC,EAAE,KAAK,OAAO,GAAG,CAACL,OAAO,GAAG,IAC/D;IACD,aAAa,EAAEA,OAAO,GAAG,MAAM,GAAG,MAAO;IACzC,KAAK,EAAEA,OAAO,GAAGO,MAAM,CAACE,QAAQ,GAAGF,MAAM,CAACG;EAAS,CAAA,EAElDT,QAAQ,CACJ,CACF;AAEX;AAEA,IAAMM,MAAM,GAAGI,uBAAU,CAACC,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ,CAAC;EACDL,QAAQ,EAAE;IACRI,IAAI,EAAE;EACR,CAAC;EACDH,QAAQ,EAAE;IACRG,IAAI,EAAE,CAAC;IACPE,GAAG,EAAEjB;EACP;AACF,CAAC,CAAC","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene(_ref) {\n  let {\n    visible,\n    children,\n    style,\n    ...rest\n  } = _ref;\n  if (Platform.OS === 'web') {\n    return /*#__PURE__*/React.createElement(View\n    // @ts-expect-error: hidden exists on web, but not in React Native\n    , _extends({\n      hidden: !visible,\n      style: [{\n        display: visible ? 'flex' : 'none'\n      }, styles.container, style],\n      pointerEvents: visible ? 'auto' : 'none'\n    }, rest), children);\n  }\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style]\n    // box-none doesn't seem to work properly on Android\n    ,\n    pointerEvents: visible ? 'auto' : 'none'\n  }, /*#__PURE__*/React.createElement(View, {\n    collapsable: false,\n    removeClippedSubviews:\n    // On iOS & macOS, set removeClippedSubviews to true only when not focused\n    // This is an workaround for a bug where the clipped view never re-appears\n    Platform.OS === 'ios' || Platform.OS === 'macos' ? !visible : true,\n    pointerEvents: visible ? 'auto' : 'none',\n    style: visible ? styles.attached : styles.detached\n  }, children));\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});\n//# sourceMappingURL=ResourceSavingView.js.map"]},"metadata":{},"sourceType":"script"}