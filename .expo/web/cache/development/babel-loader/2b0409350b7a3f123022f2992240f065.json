{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StackActions = void 0;\nexports.default = StackRouter;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _BaseRouter = _interopRequireDefault(require(\"./BaseRouter\"));\nvar StackActions = {\n  replace: function replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  push: function push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  pop: function pop() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count: count\n      }\n    };\n  },\n  popToTop: function popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexports.StackActions = StackActions;\nfunction StackRouter(options) {\n  var router = Object.assign({}, _BaseRouter.default, {\n    type: 'stack',\n    getInitialState: function getInitialState(_ref) {\n      var routeNames = _ref.routeNames,\n        routeParamList = _ref.routeParamList;\n      var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\" + (0, _nonSecure.nanoid)(),\n        index: 0,\n        routeNames: routeNames,\n        routes: [{\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList;\n      var state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      }).map(function (route) {\n        return Object.assign({}, route, {\n          key: route.key || route.name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[route.name] !== undefined ? Object.assign({}, routeParamList[route.name], route.params) : route.params\n        });\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\" + (0, _nonSecure.nanoid)(),\n        index: routes.length - 1,\n        routeNames: routeNames,\n        routes: routes\n      };\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList,\n        routeKeyChanges = _ref3.routeKeyChanges;\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name) && !routeKeyChanges.includes(route.name);\n      });\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return Object.assign({}, state, {\n        routeNames: routeNames,\n        routes: routes,\n        index: Math.min(state.index, routes.length - 1)\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return Object.assign({}, state, {\n        index: index,\n        routes: state.routes.slice(0, index + 1)\n      });\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      var routeParamList = options.routeParamList;\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            var _action$payload = action.payload,\n              name = _action$payload.name,\n              key = _action$payload.key,\n              params = _action$payload.params;\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n            return Object.assign({}, state, {\n              routes: state.routes.map(function (route, i) {\n                return i === index ? {\n                  key: key !== undefined ? key : name + \"-\" + (0, _nonSecure.nanoid)(),\n                  name: name,\n                  params: routeParamList[name] !== undefined ? Object.assign({}, routeParamList[name], params) : params\n                } : route;\n              })\n            });\n          }\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            var getId = options.routeGetIdList[action.payload.name];\n            var id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            var route = id ? state.routes.find(function (route) {\n              return route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              }));\n            }) : undefined;\n            var routes;\n            if (route) {\n              routes = state.routes.filter(function (r) {\n                return r.key !== route.key;\n              });\n              routes.push(Object.assign({}, route, {\n                params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n              }));\n            } else {\n              routes = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                key: action.payload.name + \"-\" + (0, _nonSecure.nanoid)(),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n              }]);\n            }\n            return Object.assign({}, state, {\n              index: routes.length - 1,\n              routes: routes\n            });\n          }\n          return null;\n        case 'POP':\n          {\n            var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n            if (_index > 0) {\n              var count = Math.max(_index - action.payload.count + 1, 1);\n              var _routes = state.routes.slice(0, count).concat(state.routes.slice(_index + 1));\n              return Object.assign({}, state, {\n                index: _routes.length - 1,\n                routes: _routes\n              });\n            }\n            return null;\n          }\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n          if (action.payload.key || action.payload.name) {\n            var _action$payload$path;\n            var _index2 = -1;\n            var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n            var _id = _getId === null || _getId === void 0 ? void 0 : _getId({\n              params: action.payload.params\n            });\n            if (_id) {\n              _index2 = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name && _id === (_getId === null || _getId === void 0 ? void 0 : _getId({\n                  params: route.params\n                }));\n              });\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              _index2 = state.index;\n            } else {\n              for (var i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  _index2 = i;\n                  break;\n                }\n              }\n            }\n            if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n            if (_index2 === -1 && action.payload.name !== undefined) {\n              var _action$payload$key;\n              var _routes2 = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                key: (_action$payload$key = action.payload.key) != null ? _action$payload$key : action.payload.name + \"-\" + (0, _nonSecure.nanoid)(),\n                name: action.payload.name,\n                path: action.payload.path,\n                params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n              }]);\n              return Object.assign({}, state, {\n                routes: _routes2,\n                index: _routes2.length - 1\n              });\n            }\n            var _route = state.routes[_index2];\n            var _params;\n            if (action.payload.merge) {\n              _params = action.payload.params !== undefined || routeParamList[_route.name] !== undefined ? Object.assign({}, routeParamList[_route.name], _route.params, action.payload.params) : _route.params;\n            } else {\n              _params = routeParamList[_route.name] !== undefined ? Object.assign({}, routeParamList[_route.name], action.payload.params) : action.payload.params;\n            }\n            return Object.assign({}, state, {\n              index: _index2,\n              routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [_params !== _route.params || action.payload.path && action.payload.path !== _route.path ? Object.assign({}, _route, {\n                path: (_action$payload$path = action.payload.path) != null ? _action$payload$path : _route.path,\n                params: _params\n              }) : state.routes[_index2]])\n            });\n          }\n          return null;\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n          return null;\n        default:\n          return _BaseRouter.default.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  });\n  return router;\n}","map":{"version":3,"sources":["StackRouter.tsx"],"names":["StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","BaseRouter","getInitialState","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","nanoid","index","routes","getRehydratedState","partialState","state","filter","route","map","length","getStateForRouteNamesChange","routeKeyChanges","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","i","getId","routeGetIdList","id","find","max","concat","path","merge","actionCreators"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport BaseRouter from './BaseRouter';\nexport const StackActions = {\n  replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name,\n        params\n      }\n    };\n  },\n  push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name,\n        params\n      }\n    };\n  },\n  pop() {\n    let count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count\n      }\n    };\n  },\n  popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexport default function StackRouter(options) {\n  const router = {\n    ...BaseRouter,\n    type: 'stack',\n    getInitialState(_ref) {\n      let {\n        routeNames,\n        routeParamList\n      } = _ref;\n      const initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [{\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState(partialState, _ref2) {\n      let {\n        routeNames,\n        routeParamList\n      } = _ref2;\n      let state = partialState;\n      if (state.stale === false) {\n        return state;\n      }\n      const routes = state.routes.filter(route => routeNames.includes(route.name)).map(route => ({\n        ...route,\n        key: route.key || `${route.name}-${nanoid()}`,\n        params: routeParamList[route.name] !== undefined ? {\n          ...routeParamList[route.name],\n          ...route.params\n        } : route.params\n      }));\n      if (routes.length === 0) {\n        const initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes\n      };\n    },\n    getStateForRouteNamesChange(state, _ref3) {\n      let {\n        routeNames,\n        routeParamList,\n        routeKeyChanges\n      } = _ref3;\n      const routes = state.routes.filter(route => routeNames.includes(route.name) && !routeKeyChanges.includes(route.name));\n      if (routes.length === 0) {\n        const initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1)\n      };\n    },\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex(r => r.key === key);\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1)\n      };\n    },\n    getStateForAction(state, action, options) {\n      const {\n        routeParamList\n      } = options;\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            const index = action.target === state.key && action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            const {\n              name,\n              key,\n              params\n            } = action.payload;\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n            return {\n              ...state,\n              routes: state.routes.map((route, i) => i === index ? {\n                key: key !== undefined ? key : `${name}-${nanoid()}`,\n                name,\n                params: routeParamList[name] !== undefined ? {\n                  ...routeParamList[name],\n                  ...params\n                } : params\n              } : route)\n            };\n          }\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            const route = id ? state.routes.find(route => route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n              params: route.params\n            }))) : undefined;\n            let routes;\n            if (route) {\n              routes = state.routes.filter(r => r.key !== route.key);\n              routes.push({\n                ...route,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              });\n            } else {\n              routes = [...state.routes, {\n                key: `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              }];\n            }\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes\n            };\n          }\n          return null;\n        case 'POP':\n          {\n            const index = action.target === state.key && action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index > 0) {\n              const count = Math.max(index - action.payload.count + 1, 1);\n              const routes = state.routes.slice(0, count).concat(state.routes.slice(index + 1));\n              return {\n                ...state,\n                index: routes.length - 1,\n                routes\n              };\n            }\n            return null;\n          }\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n            const getId =\n            // `getId` and `key` can't be used together\n            action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n            const id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            if (id) {\n              index = state.routes.findIndex(route => route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              })));\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n            if (index === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [...state.routes, {\n                key: action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                path: action.payload.path,\n                params: routeParamList[action.payload.name] !== undefined ? {\n                  ...routeParamList[action.payload.name],\n                  ...action.payload.params\n                } : action.payload.params\n              }];\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1\n              };\n            }\n            const route = state.routes[index];\n            let params;\n            if (action.payload.merge) {\n              params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...route.params,\n                ...action.payload.params\n              } : route.params;\n            } else {\n              params = routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...action.payload.params\n              } : action.payload.params;\n            }\n            return {\n              ...state,\n              index,\n              routes: [...state.routes.slice(0, index), params !== route.params || action.payload.path && action.payload.path !== route.path ? {\n                ...route,\n                path: action.payload.path ?? route.path,\n                params\n              } : state.routes[index]]\n            };\n          }\n          return null;\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n          return null;\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  };\n  return router;\n}\n//# sourceMappingURL=StackRouter.js.map"]},"metadata":{},"sourceType":"script"}