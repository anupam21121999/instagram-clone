{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar yup = _interopRequireWildcard(require(\"yup\"));\nvar _formik = require(\"formik\");\nvar _emailValidator = _interopRequireDefault(require(\"email-validator\"));\nvar _reactNativeReanimated = require(\"react-native-reanimated\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"E:\\\\Instagram-Clone\\\\components\\\\loginScreen\\\\LoginForm.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar LoginForm = function LoginForm() {\n  var LoginFormSchema = yup.object().shape({\n    email: yup.string().email().required('An email is required'),\n    password: yup.string().min(6, 'Your password must have 6 characters')\n  });\n  return (0, _jsxRuntime.jsx)(_reactNative.View, {\n    style: styles.wrapper,\n    children: (0, _jsxRuntime.jsx)(_formik.Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      onSubmit: function onSubmit(values) {\n        console.log(values);\n      },\n      validationSchema: LoginFormSchema,\n      validateOnMount: true,\n      children: function children(_ref) {\n        var handleBlur = _ref.handleBlur,\n          handleChange = _ref.handleChange,\n          handleSubmit = _ref.handleSubmit,\n          values = _ref.values,\n          errors = _ref.errors,\n          isValid = _ref.isValid;\n        return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n          children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: styles.inputField,\n            children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n              placeholder: \"Phone number, Username or Email\",\n              autoCapitalize: \"none\",\n              keyboardType: \"email-address\",\n              textContentType: \"emailAddress\",\n              autoFocus: true,\n              onChangeText: handleChange('email'),\n              onBlur: handleBlur('email'),\n              value: values.email\n            })\n          }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: styles.inputField,\n            children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n              placeholder: \"Password\",\n              autoCapitalize: \"none\",\n              textContentType: \"password\",\n              autoCorrect: false,\n              secureTextEntry: true,\n              onChangeText: handleChange('password'),\n              onBlur: handleBlur('password'),\n              value: values.password\n            })\n          }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: {\n              alignItems: 'flex-end',\n              marginTop: 20\n            },\n            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: {\n                color: '#6BB0F5',\n                marginBottom: 30\n              },\n              children: \"Forgot Password\"\n            })\n          }), (0, _jsxRuntime.jsx)(_reactNative.Pressable, {\n            style: styles.button(isValid),\n            titleSize: 20,\n            onPress: handleSubmit,\n            disabled: !isValid,\n            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: styles.buttonText,\n              children: \"LOGIN\"\n            })\n          }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: styles.signupContainer,\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n              children: \"Don't have an account?\"\n            }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n              children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                style: {\n                  Color: '#0096F6'\n                },\n                children: \"      Sign up\"\n              })\n            })]\n          })]\n        });\n      }\n    })\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    marginTop: 80\n  },\n  inputField: {\n    borderRadius: 4,\n    padding: 12,\n    marginBottom: 10,\n    borderWidth: 1\n  },\n  button: function button(isValid) {\n    return {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: isValid ? '#0096F6' : '#9ACAF7',\n      maxHeight: 42,\n      borderRadius: 4\n    };\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  signupContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 50\n  }\n});\nvar _default = LoginForm;\nexports.default = _default;","map":{"version":3,"names":["LoginForm","LoginFormSchema","yup","object","shape","email","string","required","password","min","styles","wrapper","values","console","log","handleBlur","handleChange","handleSubmit","errors","isValid","inputField","alignItems","marginTop","color","marginBottom","button","buttonText","signupContainer","Color","StyleSheet","create","borderRadius","padding","borderWidth","justifyContent","backgroundColor","maxHeight","fontSize","fontWeight","flexDirection","width"],"sources":["E:/Instagram-Clone/components/loginScreen/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport {Text, View, TextInput, Button, StyleSheet, Pressable, TouchableOpacity } from 'react-native'\r\nimport * as yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport Validator from 'email-validator';\r\nimport { Value } from 'react-native-reanimated';\r\n\r\nconst LoginForm = () => {\r\n\r\n    const LoginFormSchema = yup.object().shape({\r\n        email: yup.string().email().required('An email is required'),\r\n        password: yup.string().min(6, 'Your password must have 6 characters'),\r\n    });\r\n\r\n  return (\r\n    <View style={styles.wrapper}>\r\n    <Formik\r\n        initialValues={{email: '', password: ''}}\r\n        onSubmit={values =>{\r\n            console.log(values)\r\n        }}\r\n        validationSchema={LoginFormSchema}\r\n        validateOnMount={true}\r\n    >\r\n     {({handleBlur, handleChange, handleSubmit, values, errors, isValid})=>\r\n        <>\r\n    <View style={styles.inputField}>\r\n      <TextInput placeholder='Phone number, Username or Email'\r\n                autoCapitalize='none'\r\n                keyboardType='email-address'\r\n                textContentType='emailAddress'\r\n                autoFocus={true}\r\n                onChangeText={handleChange('email')}\r\n                onBlur={handleBlur('email')}\r\n                value={values.email}\r\n      />\r\n      </View>\r\n      <View style={styles.inputField}>\r\n      <TextInput placeholder='Password'\r\n                autoCapitalize='none'\r\n                textContentType='password'\r\n                autoCorrect={false}\r\n                secureTextEntry={true}\r\n                onChangeText={handleChange('password')}\r\n                onBlur={handleBlur('password')}\r\n                value={values.password}\r\n      />\r\n      </View>\r\n      <View style={{alignItems: 'flex-end', marginTop: 20}}>\r\n        <Text style={{color: '#6BB0F5', marginBottom: 30}}>Forgot Password</Text>\r\n      </View>\r\n      <Pressable style={styles.button(isValid)} titleSize={20} onPress={handleSubmit} disabled={!isValid}>\r\n        <Text style={styles.buttonText}>LOGIN</Text>\r\n      </Pressable>\r\n      <View style={styles.signupContainer}>\r\n        <Text>Don't have an account?</Text>\r\n        <TouchableOpacity>\r\n            <Text style={{Color: '#0096F6'}}>      Sign up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      </>\r\n     }\r\n      </Formik>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        marginTop: 80,\r\n    },\r\n    inputField: {\r\n        borderRadius: 4,\r\n        padding: 12,\r\n        marginBottom: 10,\r\n        borderWidth: 1,\r\n    },\r\n    button: isValid =>({\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: isValid ? '#0096F6' : '#9ACAF7',\r\n        maxHeight: 42,\r\n        borderRadius: 4,\r\n    }),\r\n    buttonText: {\r\n        fontSize: 20,\r\n        color: '#fff',\r\n        fontWeight: '600',\r\n    },\r\n    signupContainer: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        marginTop: 50,\r\n    }\r\n});\r\n\r\nexport default LoginForm"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAgD;AAAA;EAAA;AAAA;AAAA;AAEhD,IAAMA,SAAS,GAAG,SAAZA,SAAS,GAAS;EAEpB,IAAMC,eAAe,GAAGC,GAAG,CAACC,MAAM,EAAE,CAACC,KAAK,CAAC;IACvCC,KAAK,EAAEH,GAAG,CAACI,MAAM,EAAE,CAACD,KAAK,EAAE,CAACE,QAAQ,CAAC,sBAAsB,CAAC;IAC5DC,QAAQ,EAAEN,GAAG,CAACI,MAAM,EAAE,CAACG,GAAG,CAAC,CAAC,EAAE,sCAAsC;EACxE,CAAC,CAAC;EAEJ,OACE,qBAAC,iBAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAA,UAC5B,qBAAC,cAAM;MACH,aAAa,EAAE;QAACN,KAAK,EAAE,EAAE;QAAEG,QAAQ,EAAE;MAAE,CAAE;MACzC,QAAQ,EAAE,kBAAAI,MAAM,EAAG;QACfC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACvB,CAAE;MACF,gBAAgB,EAAEX,eAAgB;MAClC,eAAe,EAAE,IAAK;MAAA,UAExB;QAAA,IAAEc,UAAU,QAAVA,UAAU;UAAEC,YAAY,QAAZA,YAAY;UAAEC,YAAY,QAAZA,YAAY;UAAEL,MAAM,QAANA,MAAM;UAAEM,MAAM,QAANA,MAAM;UAAEC,OAAO,QAAPA,OAAO;QAAA,OAC/D;UAAA,WACJ,qBAAC,iBAAI;YAAC,KAAK,EAAET,MAAM,CAACU,UAAW;YAAA,UAC7B,qBAAC,sBAAS;cAAC,WAAW,EAAC,iCAAiC;cAC9C,cAAc,EAAC,MAAM;cACrB,YAAY,EAAC,eAAe;cAC5B,eAAe,EAAC,cAAc;cAC9B,SAAS,EAAE,IAAK;cAChB,YAAY,EAAEJ,YAAY,CAAC,OAAO,CAAE;cACpC,MAAM,EAAED,UAAU,CAAC,OAAO,CAAE;cAC5B,KAAK,EAAEH,MAAM,CAACP;YAAM;UAC5B,EACK,EACP,qBAAC,iBAAI;YAAC,KAAK,EAAEK,MAAM,CAACU,UAAW;YAAA,UAC/B,qBAAC,sBAAS;cAAC,WAAW,EAAC,UAAU;cACvB,cAAc,EAAC,MAAM;cACrB,eAAe,EAAC,UAAU;cAC1B,WAAW,EAAE,KAAM;cACnB,eAAe,EAAE,IAAK;cACtB,YAAY,EAAEJ,YAAY,CAAC,UAAU,CAAE;cACvC,MAAM,EAAED,UAAU,CAAC,UAAU,CAAE;cAC/B,KAAK,EAAEH,MAAM,CAACJ;YAAS;UAC/B,EACK,EACP,qBAAC,iBAAI;YAAC,KAAK,EAAE;cAACa,UAAU,EAAE,UAAU;cAAEC,SAAS,EAAE;YAAE,CAAE;YAAA,UACnD,qBAAC,iBAAI;cAAC,KAAK,EAAE;gBAACC,KAAK,EAAE,SAAS;gBAAEC,YAAY,EAAE;cAAE,CAAE;cAAA,UAAC;YAAe;UAAO,EACpE,EACP,qBAAC,sBAAS;YAAC,KAAK,EAAEd,MAAM,CAACe,MAAM,CAACN,OAAO,CAAE;YAAC,SAAS,EAAE,EAAG;YAAC,OAAO,EAAEF,YAAa;YAAC,QAAQ,EAAE,CAACE,OAAQ;YAAA,UACjG,qBAAC,iBAAI;cAAC,KAAK,EAAET,MAAM,CAACgB,UAAW;cAAA,UAAC;YAAK;UAAO,EAClC,EACZ,sBAAC,iBAAI;YAAC,KAAK,EAAEhB,MAAM,CAACiB,eAAgB;YAAA,WAClC,qBAAC,iBAAI;cAAA,UAAC;YAAsB,EAAO,EACnC,qBAAC,6BAAgB;cAAA,UACb,qBAAC,iBAAI;gBAAC,KAAK,EAAE;kBAACC,KAAK,EAAE;gBAAS,CAAE;gBAAA,UAAC;cAAa;YAAO,EACtC;UAAA,EACd;QAAA,EACJ;MAAA;IAAA;EAEM,EACJ;AAEX,CAAC;AAED,IAAMlB,MAAM,GAAGmB,uBAAU,CAACC,MAAM,CAAC;EAC7BnB,OAAO,EAAE;IACLW,SAAS,EAAE;EACf,CAAC;EACDF,UAAU,EAAE;IACRW,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,EAAE;IACXR,YAAY,EAAE,EAAE;IAChBS,WAAW,EAAE;EACjB,CAAC;EACDR,MAAM,EAAE,gBAAAN,OAAO;IAAA,OAAI;MACfE,UAAU,EAAE,QAAQ;MACpBa,cAAc,EAAE,QAAQ;MACxBC,eAAe,EAAEhB,OAAO,GAAG,SAAS,GAAG,SAAS;MAChDiB,SAAS,EAAE,EAAE;MACbL,YAAY,EAAE;IAClB,CAAC;EAAA,CAAC;EACFL,UAAU,EAAE;IACRW,QAAQ,EAAE,EAAE;IACZd,KAAK,EAAE,MAAM;IACbe,UAAU,EAAE;EAChB,CAAC;EACDX,eAAe,EAAE;IACbY,aAAa,EAAE,KAAK;IACpBC,KAAK,EAAE,MAAM;IACbN,cAAc,EAAE,QAAQ;IACxBZ,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAAC,eAEYtB,SAAS;AAAA"},"metadata":{},"sourceType":"script"}