{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar yup = _interopRequireWildcard(require(\"yup\"));\nvar _formik = require(\"formik\");\nvar _reactNative = require(\"react-native\");\nvar _reactNativeElements = require(\"react-native-elements\");\nvar _validUrl = _interopRequireDefault(require(\"valid-url\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"E:\\\\Instagram-Clone\\\\components\\\\newPost\\\\FormicPostUploader.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar placeholder_img = 'https://t3.ftcdn.net/jpg/02/48/42/64/360_F_248426448_NVKLywWqArG2ADUxDq6QprtIzsF82dMF.jpg';\nvar uploadPostSchema = yup.object().shape({\n  imageUrl: yup.string().url().required('A url is required'),\n  caption: yup.string().max(2200, 'Caption has reached the max limit.')\n});\nvar FormicPostUploader = function FormicPostUploader(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = (0, _react.useState)(placeholder_img),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    thumbnailUrl = _useState2[0],\n    setThumbnailUrl = _useState2[1];\n  return (0, _jsxRuntime.jsx)(_formik.Formik, {\n    initialValues: {\n      caption: '',\n      imageUrl: ''\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values);\n      console.log(\"Your post was submitted successfully\");\n      navigation.goBack();\n    },\n    validationSchema: uploadPostSchema,\n    validateOnMount: true,\n    children: function children(_ref2) {\n      var handleBlur = _ref2.handleBlur,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        isValid = _ref2.isValid;\n      return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n        children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: {\n            margin: 20,\n            justifyContent: 'space-between',\n            flexDirection: 'row'\n          },\n          children: [(0, _jsxRuntime.jsx)(_reactNative.Image, {\n            source: {\n              uri: _validUrl.default.isUri(thumbnailUrl) ? thumbnailUrl : placeholder_img\n            },\n            style: {\n              height: 100,\n              width: 100\n            }\n          }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: {\n              flex: 1,\n              marginLeft: 10\n            },\n            children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n              style: {\n                fontSize: 20\n              },\n              placeholder: \"Write a caption\",\n              placeholderTextColor: \"grey\",\n              multiline: true,\n              onChangeText: handleChange('caption'),\n              onBlur: handleBlur('caption'),\n              value: values.caption\n            })\n          })]\n        }), (0, _jsxRuntime.jsx)(_reactNativeElements.Divider, {\n          width: 1,\n          orientation: \"vertical\"\n        }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n          style: {\n            fontSize: 20\n          },\n          placeholder: \"Insert an image\",\n          onChange: function onChange(e) {\n            return setThumbnailUrl(e.nativeEvent.text);\n          },\n          placeholderTextColor: \"grey\",\n          onChangeText: handleChange('imageUrl'),\n          onBlur: handleBlur('imageUrl'),\n          value: values.imageUrl\n        }), errors.imageUrl && (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: {\n            fontSize: 10,\n            color: 'red'\n          },\n          children: errors.imageUrl\n        }), (0, _jsxRuntime.jsx)(_reactNative.Button, {\n          onPress: handleSubmit,\n          title: \"Share\",\n          disabled: !isValid\n        })]\n      });\n    }\n  });\n};\nvar _default = FormicPostUploader;\nexports.default = _default;","map":{"version":3,"names":["placeholder_img","uploadPostSchema","yup","object","shape","imageUrl","string","url","required","caption","max","FormicPostUploader","navigation","useState","thumbnailUrl","setThumbnailUrl","values","console","log","goBack","handleBlur","handleChange","handleSubmit","errors","isValid","margin","justifyContent","flexDirection","uri","validUrl","isUri","height","width","flex","marginLeft","fontSize","e","nativeEvent","text","color"],"sources":["E:/Instagram-Clone/components/newPost/FormicPostUploader.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport * as yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {Button, Image, View, Text } from 'react-native';\r\nimport { TextInput } from 'react-native';\r\nimport {  Divider } from 'react-native-elements';\r\nimport validUrl from 'valid-url'\r\n\r\nconst placeholder_img = 'https://t3.ftcdn.net/jpg/02/48/42/64/360_F_248426448_NVKLywWqArG2ADUxDq6QprtIzsF82dMF.jpg'\r\n\r\nconst uploadPostSchema = yup.object().shape({\r\n    imageUrl: yup.string().url().required('A url is required'),\r\n    caption: yup.string().max(2200, 'Caption has reached the max limit.')\r\n});\r\n\r\nconst FormicPostUploader = ({navigation}) => {\r\n    const [thumbnailUrl, setThumbnailUrl] = useState(placeholder_img)\r\n\r\n  return (\r\n   <Formik initialValues={{caption: '', imageUrl: ''}}\r\n    onSubmit={(values) =>{\r\n      console.log(values)\r\n      console.log(\"Your post was submitted successfully\")\r\n      navigation.goBack()\r\n      }} \r\n    validationSchema={uploadPostSchema} \r\n    validateOnMount={true}>\r\n        {({handleBlur, handleChange, handleSubmit, values, errors, isValid})=>\r\n        <>\r\n            <View style={{margin: 20, justifyContent: 'space-between', flexDirection: 'row'}}>\r\n                <Image source={{uri: validUrl.isUri(thumbnailUrl) ? thumbnailUrl : placeholder_img}} style={{height: 100, width: 100}}/>\r\n            <View style={{flex: 1, marginLeft: 10}}>\r\n            <TextInput style={{fontSize: 20}} placeholder='Write a caption'\r\n             placeholderTextColor='grey'\r\n              multiline={true} \r\n              onChangeText={handleChange('caption')}\r\n                onBlur={handleBlur('caption')}\r\n                value={values.caption}\r\n              />\r\n              </View>\r\n            </View>\r\n            <Divider width={1} orientation='vertical'/>\r\n            <TextInput style={{fontSize: 20}} placeholder='Insert an image'\r\n            onChange={e => setThumbnailUrl(e.nativeEvent.text)}\r\n             placeholderTextColor='grey'\r\n             onChangeText={handleChange('imageUrl')}\r\n                onBlur={handleBlur('imageUrl')}\r\n                value={values.imageUrl}\r\n             />\r\n             {errors.imageUrl && (\r\n              <Text style={{fontSize: 10, color: 'red'}}>\r\n                {errors.imageUrl}\r\n              </Text>\r\n             )}\r\n             <Button onPress={handleSubmit} title='Share' disabled={!isValid}/>\r\n        </>\r\n        }\r\n   </Formik>\r\n  )\r\n}\r\n\r\nexport default FormicPostUploader"],"mappings":"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"},"metadata":{},"sourceType":"script"}