{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ModalStatusBarManager;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ModalStatusBarManager(_ref) {\n  var _flattenedStyle$trans, _flattenedStyle$trans2;\n  var dark = _ref.dark,\n    layout = _ref.layout,\n    insets = _ref.insets,\n    style = _ref.style;\n  var _useTheme = (0, _native.useTheme)(),\n    darkTheme = _useTheme.dark;\n  var _React$useState = React.useState(true),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    overlapping = _React$useState2[0],\n    setOverlapping = _React$useState2[1];\n  var scale = 1 - 20 / layout.width;\n  var offset = (insets.top - 34) * scale;\n  var flattenedStyle = _reactNative.StyleSheet.flatten(style);\n  var translateY = flattenedStyle === null || flattenedStyle === void 0 ? void 0 : (_flattenedStyle$trans = flattenedStyle.transform) === null || _flattenedStyle$trans === void 0 ? void 0 : (_flattenedStyle$trans2 = _flattenedStyle$trans.find(function (s) {\n    return s.translateY !== undefined;\n  })) === null || _flattenedStyle$trans2 === void 0 ? void 0 : _flattenedStyle$trans2.translateY;\n  React.useEffect(function () {\n    var listener = function listener(_ref2) {\n      var value = _ref2.value;\n      setOverlapping(value < offset);\n    };\n    var sub = translateY === null || translateY === void 0 ? void 0 : translateY.addListener(listener);\n    return function () {\n      return translateY === null || translateY === void 0 ? void 0 : translateY.removeListener(sub);\n    };\n  }, [offset, translateY]);\n  var darkContent = dark != null ? dark : !darkTheme;\n  return React.createElement(_reactNative.StatusBar, {\n    animated: true,\n    barStyle: overlapping && darkContent ? 'dark-content' : 'light-content'\n  });\n}","map":{"version":3,"sources":["ModalStatusBarManager.tsx"],"names":["ModalStatusBarManager","dark","layout","insets","style","darkTheme","useTheme","overlapping","setOverlapping","React","useState","scale","width","offset","top","flattenedStyle","StyleSheet","flatten","translateY","transform","find","s","undefined","useEffect","listener","value","sub","addListener","removeListener","darkContent"],"mappings":";;;;;;AAAA;AACA;AACA;AAAoD;AAAA;AAYrC,SAASA,qBAAqB,CAAA,IAAA,EAKnC;EAAA,IAAA,qBAAA,EAAA,sBAAA;EALoC,IAC5CC,IAAI,GAIE,IAAA,CAJNA,IAAI;IACJC,MAAM,GAGA,IAAA,CAHNA,MAAM;IACNC,MAAM,GAEA,IAAA,CAFNA,MAAM;IACNC,KAAAA,GACM,IAAA,CADNA,KAAAA;EAEA,gBAA4BE,IAAAA,gBAAQ,GAAE;IAAxBD,SAAAA,aAANJ,IAAI;EACZ,sBAAsCQ,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAnDH,WAAW;IAAEC,cAAc;EAElC,IAAMG,KAAK,GAAG,CAAC,GAAG,EAAE,GAAGT,MAAM,CAACU,KAAK;EACnC,IAAMC,MAAM,GAAG,CAACV,MAAM,CAACW,GAAG,GAAG,EAAE,IAAIH,KAAK;EAExC,IAAMI,cAAc,GAAGC,uBAAU,CAACC,OAAO,CAACb,KAAK,CAAC;EAChD,IAAMc,UAAU,GAAGH,cAAc,KAAA,IAAA,IAAdA,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAdA,cAAc,CAAEI,SAAS,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAzBJ,qBAAAA,CAA2BK,IAAI,CAC/CC,UAAAA,CAAM;IAAA,OAAKA,CAAC,CAACH,UAAU,KAAKI,SAAS;EAAA,EACvC,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAFkBP,sBAAAA,CAEhBG,UAAU;EAEbT,KAAK,CAACc,SAAS,CAAC,YAAM;IACpB,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAG,KAAA,EAAkC;MAAjC,IAAEC,KAAAA,GAA0B,KAAA,CAA1BA,KAAAA;MAClBjB,cAAc,CAACiB,KAAK,GAAGZ,MAAM,CAAC;IAChC,CAAC;IAED,IAAMa,GAAG,GAAGR,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAES,WAAW,CAACH,QAAQ,CAAC;IAE7C,OAAO;MAAA,OAAMN,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAEU,cAAc,CAACF,GAAG,CAAC;IAAA;EAC9C,CAAC,EAAE,CAACb,MAAM,EAAEK,UAAU,CAAC,CAAC;EAExB,IAAMW,WAAW,GAAG5B,IAAI,WAAJA,IAAI,GAAI,CAACI,SAAS;EAEtC,OACE,KAAA,CAAA,aAAA,CAAC,sBAAS,EAAA;IACR,QAAQ,EAAA,IAAA;IACR,QAAQ,EAAEE,WAAW,IAAIsB,WAAW,GAAG,cAAc,GAAG;EAAgB,CAAA,CACxE;AAEN","sourceRoot":"../../src","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { StatusBar, StyleSheet } from 'react-native';\nexport default function ModalStatusBarManager(_ref) {\n  var _flattenedStyle$trans, _flattenedStyle$trans2;\n  let {\n    dark,\n    layout,\n    insets,\n    style\n  } = _ref;\n  const {\n    dark: darkTheme\n  } = useTheme();\n  const [overlapping, setOverlapping] = React.useState(true);\n  const scale = 1 - 20 / layout.width;\n  const offset = (insets.top - 34) * scale;\n  const flattenedStyle = StyleSheet.flatten(style);\n  const translateY = flattenedStyle === null || flattenedStyle === void 0 ? void 0 : (_flattenedStyle$trans = flattenedStyle.transform) === null || _flattenedStyle$trans === void 0 ? void 0 : (_flattenedStyle$trans2 = _flattenedStyle$trans.find(s => s.translateY !== undefined)) === null || _flattenedStyle$trans2 === void 0 ? void 0 : _flattenedStyle$trans2.translateY;\n  React.useEffect(() => {\n    const listener = _ref2 => {\n      let {\n        value\n      } = _ref2;\n      setOverlapping(value < offset);\n    };\n    const sub = translateY === null || translateY === void 0 ? void 0 : translateY.addListener(listener);\n    return () => translateY === null || translateY === void 0 ? void 0 : translateY.removeListener(sub);\n  }, [offset, translateY]);\n  const darkContent = dark ?? !darkTheme;\n  return /*#__PURE__*/React.createElement(StatusBar, {\n    animated: true,\n    barStyle: overlapping && darkContent ? 'dark-content' : 'light-content'\n  });\n}\n//# sourceMappingURL=ModalStatusBarManager.js.map"]},"metadata":{},"sourceType":"script"}