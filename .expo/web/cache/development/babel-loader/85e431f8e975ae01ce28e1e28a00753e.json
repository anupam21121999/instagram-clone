{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIsModalPresentation = exports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _CardStyleInterpolators = require(\"../../TransitionConfigs/CardStyleInterpolators\");\nvar _CardAnimationContext = _interopRequireDefault(require(\"../../utils/CardAnimationContext\"));\nvar _getDistanceForDirection = _interopRequireDefault(require(\"../../utils/getDistanceForDirection\"));\nvar _getInvertedMultiplier = _interopRequireDefault(require(\"../../utils/getInvertedMultiplier\"));\nvar _memoize = _interopRequireDefault(require(\"../../utils/memoize\"));\nvar _GestureHandler = require(\"../GestureHandler\");\nvar _ModalStatusBarManager = _interopRequireDefault(require(\"../ModalStatusBarManager\"));\nvar _CardSheet = _interopRequireDefault(require(\"./CardSheet\"));\nvar _excluded = [\"styleInterpolator\", \"interpolationIndex\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"headerDarkContent\", \"children\", \"containerStyle\", \"contentStyle\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\nvar hasOpacityStyle = function hasOpacityStyle(style) {\n  if (style) {\n    var flattenedStyle = _reactNative.StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nvar Card = function (_React$Component) {\n  (0, _inherits2.default)(Card, _React$Component);\n  var _super = _createSuper(Card);\n  function Card() {\n    var _this;\n    (0, _classCallCheck2.default)(this, Card);\n    _this = _super.apply(this, arguments);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"isCurrentlyMounted\", false);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"isClosing\", new _reactNative.Animated.Value(FALSE));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"inverted\", new _reactNative.Animated.Value((0, _getInvertedMultiplier.default)(_this.props.gestureDirection)));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"layout\", {\n      width: new _reactNative.Animated.Value(_this.props.layout.width),\n      height: new _reactNative.Animated.Value(_this.props.layout.height)\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"isSwiping\", new _reactNative.Animated.Value(FALSE));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"interactionHandle\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"pendingGestureCallback\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"lastToValue\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"animate\", function (_ref) {\n      var closing = _ref.closing,\n        velocity = _ref.velocity;\n      var _this$props = _this.props,\n        gesture = _this$props.gesture,\n        transitionSpec = _this$props.transitionSpec,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onTransition = _this$props.onTransition;\n      var toValue = _this.getAnimateToValue(Object.assign({}, _this.props, {\n        closing: closing\n      }));\n      _this.lastToValue = toValue;\n      _this.isClosing.setValue(closing ? TRUE : FALSE);\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing: closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, Object.assign({}, spec.config, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getAnimateToValue\", function (_ref3) {\n      var closing = _ref3.closing,\n        layout = _ref3.layout,\n        gestureDirection = _ref3.gestureDirection;\n      if (!closing) {\n        return 0;\n      }\n      return (0, _getDistanceForDirection.default)(layout, gestureDirection);\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"setPointerEventsEnabled\", function (enabled) {\n      var _this$ref$current;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = _this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleStartInteraction\", function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = _reactNative.InteractionManager.createInteractionHandle();\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleEndInteraction\", function () {\n      if (_this.interactionHandle !== undefined) {\n        _reactNative.InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleGestureStateChange\", function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props2 = _this.props,\n        layout = _this$props2.layout,\n        onClose = _this$props2.onClose,\n        onGestureBegin = _this$props2.onGestureBegin,\n        onGestureCanceled = _this$props2.onGestureCanceled,\n        onGestureEnd = _this$props2.onGestureEnd,\n        gestureDirection = _this$props2.gestureDirection,\n        gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case _GestureHandler.GestureState.ACTIVE:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case _GestureHandler.GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case _GestureHandler.GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * (0, _getInvertedMultiplier.default)(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n                _this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getInterpolatedStyle\", (0, _memoize.default)(function (styleInterpolator, animation) {\n      return styleInterpolator(animation);\n    }));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getCardAnimation\", (0, _memoize.default)(function (interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: interpolationIndex,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    }));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"ref\", React.createRef());\n    return _this;\n  }\n  (0, _createClass2.default)(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        layout = _this$props3.layout,\n        gestureDirection = _this$props3.gestureDirection,\n        closing = _this$props3.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue((0, _getInvertedMultiplier.default)(gestureDirection));\n      }\n      var toValue = this.getAnimateToValue(this.props);\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.gesture.stopAnimation();\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var enableTrackpadTwoFingerGesture = true;\n      var distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          },\n          enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = (0, _getInvertedMultiplier.default)(gestureDirection);\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            },\n            enableTrackpadTwoFingerGesture: enableTrackpadTwoFingerGesture\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        styleInterpolator = _this$props5.styleInterpolator,\n        interpolationIndex = _this$props5.interpolationIndex,\n        current = _this$props5.current,\n        gesture = _this$props5.gesture,\n        next = _this$props5.next,\n        layout = _this$props5.layout,\n        insets = _this$props5.insets,\n        overlay = _this$props5.overlay,\n        overlayEnabled = _this$props5.overlayEnabled,\n        shadowEnabled = _this$props5.shadowEnabled,\n        gestureEnabled = _this$props5.gestureEnabled,\n        gestureDirection = _this$props5.gestureDirection,\n        pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n        headerDarkContent = _this$props5.headerDarkContent,\n        children = _this$props5.children,\n        customContainerStyle = _this$props5.containerStyle,\n        contentStyle = _this$props5.contentStyle,\n        rest = (0, _objectWithoutProperties2.default)(_this$props5, _excluded);\n      var interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? _reactNative.Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = typeof backgroundColor === 'string' ? (0, _color.default)(backgroundColor).alpha() === 0 : false;\n      return React.createElement(_CardAnimationContext.default.Provider, {\n        value: interpolationProps\n      }, _reactNative.Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? React.createElement(_ModalStatusBarManager.default, {\n        dark: headerDarkContent,\n        layout: layout,\n        insets: insets,\n        style: cardStyle\n      }) : null, React.createElement(_reactNative.Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(_reactNative.View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(_reactNative.View, {\n        pointerEvents: \"box-none\",\n        style: _reactNative.StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(_reactNative.Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(_GestureHandler.PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(_reactNative.Animated.View, {\n        needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(_reactNative.Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(_CardSheet.default, {\n        ref: this.ref,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n  return Card;\n}(React.Component);\nexports.default = Card;\n_defineProperty(Card, \"defaultProps\", {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? React.createElement(_reactNative.Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\nvar getIsModalPresentation = function getIsModalPresentation(cardStyleInterpolator) {\n  return cardStyleInterpolator === _CardStyleInterpolators.forModalPresentationIOS || cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nexports.getIsModalPresentation = getIsModalPresentation;\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["Card.tsx"],"names":["GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","hasOpacityStyle","style","flattenedStyle","StyleSheet","flatten","opacity","Card","React","Component","shadowEnabled","gestureEnabled","gestureVelocityImpact","overlay","styles","componentDidMount","animate","closing","props","isCurrentlyMounted","componentDidUpdate","prevProps","layout","gestureDirection","width","height","setValue","inverted","getInvertedMultiplier","toValue","getAnimateToValue","lastToValue","componentWillUnmount","gesture","stopAnimation","handleEndInteraction","Animated","Value","velocity","transitionSpec","onOpen","onClose","onTransition","isClosing","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","forceUpdate","getDistanceForDirection","enabled","pointerEvents","ref","current","setPointerEvents","interactionHandle","InteractionManager","createInteractionHandle","clearInteractionHandle","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","state","GestureState","ACTIVE","isSwiping","CANCELLED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","memoize","styleInterpolator","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","createRef","render","overlayEnabled","pageOverflowEnabled","headerDarkContent","children","containerStyle","customContainerStyle","contentStyle","rest","interpolationProps","getCardAnimation","interpolatedStyle","getInterpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","Color","alpha","getIsModalPresentation","absoluteFill","container","handleGestureStateChange","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","cardStyleInterpolator","forModalPresentationIOS","name","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AAYA;AAQA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAqD;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCrD,IAAMA,uBAAuB,GAAG,GAAG;AAEnC,IAAMC,IAAI,GAAG,CAAC;AACd,IAAMC,KAAK,GAAG,CAAC;AAKf,IAAMC,oCAAoC,GAAG,EAAE;AAC/C,IAAMC,kCAAkC,GAAG,GAAG;AAE9C,IAAMC,eAAe,GAAGC,qBAAQ,CAACC,EAAE,KAAK,KAAK;AAE7C,IAAMC,eAAe,GAAIC,SAAnBD,eAAe,CAAIC,KAAU,EAAK;EACtC,IAAIA,KAAK,EAAE;IACT,IAAMC,cAAc,GAAGC,uBAAU,CAACC,OAAO,CAACH,KAAK,CAAC;IAChD,OAAOC,cAAc,CAACG,OAAO,IAAI,IAAI;EACvC;EAEA,OAAO,KAAK;AACd,CAAC;AAAA,IAEoBC,IAAI;EAAA;EAAA;EAAgC,gBAAA;IAAA;IAAA;IAAA,2BAAA,SAAA;IAAA,eAAA,8CAAA,oBAAA,EAyD1B,KAAK,CAAA;IAAA,eAAA,8CAAA,WAAA,EAEd,IAAI6B,qBAAQ,CAACC,KAAK,CAAC1C,KAAK,CAAC,CAAA;IAAA,eAAA,8CAAA,UAAA,EAE1B,IAAIyC,qBAAQ,CAACC,KAAK,CACnCT,IAAAA,8BAAqB,EAAC,MAAKV,KAAK,CAACK,gBAAgB,CAAC,CACnD,CAAA;IAAA,eAAA,8CAAA,QAAA,EAEgB;MACfC,KAAK,EAAE,IAAIY,qBAAQ,CAACC,KAAK,CAAC,MAAKnB,KAAK,CAACI,MAAM,CAACE,KAAK,CAAC;MAClDC,MAAM,EAAE,IAAIW,qBAAQ,CAACC,KAAK,CAAC,MAAKnB,KAAK,CAACI,MAAM,CAACG,MAAM;IACrD,CAAC,CAAA;IAAA,eAAA,8CAAA,WAAA,EAEmB,IAAIW,qBAAQ,CAACC,KAAK,CAAC1C,KAAK,CAAC,CAAA;IAAA,eAAA,8CAAA,mBAAA,EAAA,KAAA,CAAA,CAAA;IAAA,eAAA,8CAAA,wBAAA,EAAA,KAAA,CAAA,CAAA;IAAA,eAAA,8CAAA,aAAA,EAAA,KAAA,CAAA,CAAA;IAAA,eAAA,8CAAA,SAAA,EAQ3B,UAAA,IAAA,EAMZ;MANa,IACjBsB,OAAO,GAKR,IAAA,CALCA,OAAO;QACPqB,QAAAA,GAID,IAAA,CAJCA,QAAAA;MAKA,kBACE,MAAKpB,KAAK;QADJe,OAAO,eAAPA,OAAO;QAAEM,cAAc,eAAdA,cAAc;QAAEC,MAAM,eAANA,MAAM;QAAEC,OAAO,eAAPA,OAAO;QAAEC,YAAAA,eAAAA,YAAAA;MAGlD,IAAMb,OAAO,GAAG,MAAKC,iBAAiB,mBACjC,MAAKZ,KAAK;QACbD,OAAAA,EAAAA;MAAAA,GACA;MAEF,MAAKc,WAAW,GAAGF,OAAO;MAE1B,MAAKc,SAAS,CAACjB,QAAQ,CAACT,OAAO,GAAGvB,IAAI,GAAGC,KAAK,CAAC;MAE/C,IAAMiD,IAAI,GAAG3B,OAAO,GAAGsB,cAAc,CAACM,KAAK,GAAGN,cAAc,CAACO,IAAI;MAEjE,IAAMC,SAAS,GACbH,IAAI,CAACG,SAAS,KAAK,QAAQ,GAAGX,qBAAQ,CAACY,MAAM,GAAGZ,qBAAQ,CAACa,MAAM;MAEjE,MAAKC,uBAAuB,CAAC,CAACjC,OAAO,CAAC;MACtC,MAAKkC,sBAAsB,EAAE;MAE7BC,YAAY,CAAC,MAAKC,sBAAsB,CAAC;MAEzCX,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,YAAY,CAAG;QAAEzB,OAAO,EAAPA,OAAO;QAAEgB,OAAO,EAAEK,QAAQ,KAAKgB;MAAU,CAAC,CAAC;MAC5DP,SAAS,CAACd,OAAO,oBACZW,IAAI,CAACW,MAAM;QACdjB,QAAQ,EAARA,QAAQ;QACRT,OAAO,EAAPA,OAAO;QACP/B,eAAe,EAAfA,eAAe;QACf0D,aAAa,EAAE;MAAA,GACf,CAACC,KAAK,CAAC,UAAA,KAAA,EAAkB;QAAjB,IAAEC,QAAAA,GAAU,KAAA,CAAVA,QAAAA;QACV,MAAKvB,oBAAoB,EAAE;QAE3BiB,YAAY,CAAC,MAAKC,sBAAsB,CAAC;QAEzC,IAAIK,QAAQ,EAAE;UACZ,IAAIzC,OAAO,EAAE;YACXwB,OAAO,EAAE;UACX,CAAC,MAAM;YACLD,MAAM,EAAE;UACV;UAEA,IAAI,MAAKrB,kBAAkB,EAAE;YAE3B,MAAKwC,WAAW,EAAE;UACpB;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAA;IAAA,eAAA,8CAAA,mBAAA,EAE2B,UAAA,KAAA,EAQtB;MARuB,IAC3B1C,OAAO,GAOR,KAAA,CAPCA,OAAO;QACPK,MAAM,GAMP,KAAA,CANCA,MAAM;QACNC,gBAAAA,GAKD,KAAA,CALCA,gBAAAA;MAMA,IAAI,CAACN,OAAO,EAAE;QACZ,OAAO,CAAC;MACV;MAEA,OAAO2C,IAAAA,gCAAuB,EAACtC,MAAM,EAAEC,gBAAgB,CAAC;IAC1D,CAAC,CAAA;IAAA,eAAA,8CAAA,yBAAA,EAEkCsC,UAAAA,OAAgB,EAAK;MAAA,IAAA,iBAAA;MACtD,IAAMC,aAAa,GAAGD,OAAO,GAAG,UAAU,GAAG,MAAM;MAEnD,CAAA,iBAAA,GAAA,MAAKE,GAAG,CAACC,OAAO,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhB,iBAAA,CAAkBC,gBAAgB,CAACH,aAAa,CAAC;IACnD,CAAC,CAAA;IAAA,eAAA,8CAAA,wBAAA,EAEgC,YAAM;MACrC,IAAI,MAAKI,iBAAiB,KAAKZ,SAAS,EAAE;QACxC,MAAKY,iBAAiB,GAAGC,+BAAkB,CAACC,uBAAuB,EAAE;MACvE;IACF,CAAC,CAAA;IAAA,eAAA,8CAAA,sBAAA,EAE8B,YAAM;MACnC,IAAI,MAAKF,iBAAiB,KAAKZ,SAAS,EAAE;QACxCa,+BAAkB,CAACE,sBAAsB,CAAC,MAAKH,iBAAiB,CAAC;QACjE,MAAKA,iBAAiB,GAAGZ,SAAS;MACpC;IACF,CAAC,CAAA;IAAA,eAAA,8CAAA,0BAAA,EAEkC,UAAA,KAAA,EAEE;MAFD,IAClCgB,WAAAA,GAC8B,KAAA,CAD9BA,WAAAA;MAEA,mBAQI,MAAKpD,KAAK;QAPZI,MAAM,gBAANA,MAAM;QACNmB,OAAO,gBAAPA,OAAO;QACP8B,cAAc,gBAAdA,cAAc;QACdC,iBAAiB,gBAAjBA,iBAAiB;QACjBC,YAAY,gBAAZA,YAAY;QACZlD,gBAAgB,gBAAhBA,gBAAgB;QAChBX,qBAAAA,gBAAAA,qBAAAA;MAGF,QAAQ0D,WAAW,CAACI,KAAK;QACvB,KAAKC,4BAAY,CAACC,MAAM;UACtB,MAAKC,SAAS,CAACnD,QAAQ,CAAChC,IAAI,CAAC;UAC7B,MAAKyD,sBAAsB,EAAE;UAC7BoB,cAAc,KAAA,IAAA,IAAdA,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,cAAc,EAAI;UAClB;QACF,KAAKI,4BAAY,CAACG,SAAS;UAAE;YAC3B,MAAKD,SAAS,CAACnD,QAAQ,CAAC/B,KAAK,CAAC;YAC9B,MAAKwC,oBAAoB,EAAE;YAE3B,IAAMG,QAAQ,GACZf,gBAAgB,KAAK,UAAU,IAC/BA,gBAAgB,KAAK,mBAAmB,GACpC+C,WAAW,CAACS,SAAS,GACrBT,WAAW,CAACU,SAAS;YAE3B,MAAKhE,OAAO,CAAC;cAAEC,OAAO,EAAE,MAAKC,KAAK,CAACD,OAAO;cAAEqB,QAAAA,EAAAA;YAAS,CAAC,CAAC;YAEvDkC,iBAAiB,KAAA,IAAA,IAAjBA,iBAAiB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,iBAAiB,EAAI;YACrB;UACF;QACA,KAAKG,4BAAY,CAACM,GAAG;UAAE;YACrB,MAAKJ,SAAS,CAACnD,QAAQ,CAAC/B,KAAK,CAAC;YAE9B,IAAIuF,QAAQ;YACZ,IAAIC,WAAW;YACf,IAAI7C,SAAQ;YAEZ,IACEf,gBAAgB,KAAK,UAAU,IAC/BA,gBAAgB,KAAK,mBAAmB,EACxC;cACA2D,QAAQ,GAAG5D,MAAM,CAACG,MAAM;cACxB0D,WAAW,GAAGb,WAAW,CAACc,YAAY;cACtC9C,SAAQ,GAAGgC,WAAW,CAACS,SAAS;YAClC,CAAC,MAAM;cACLG,QAAQ,GAAG5D,MAAM,CAACE,KAAK;cACvB2D,WAAW,GAAGb,WAAW,CAACe,YAAY;cACtC/C,SAAQ,GAAGgC,WAAW,CAACU,SAAS;YAClC;YAEA,IAAM/D,OAAO,GACX,CAACkE,WAAW,GAAG7C,SAAQ,GAAG1B,qBAAqB,IAC7CgB,IAAAA,8BAAqB,EAACL,gBAAgB,CAAC,GACzC2D,QAAQ,GAAG,CAAC,GACR5C,SAAQ,KAAK,CAAC,IAAI6C,WAAW,KAAK,CAAC,GACnC,MAAKjE,KAAK,CAACD,OAAO;YAExB,MAAKD,OAAO,CAAC;cAAEC,OAAO,EAAPA,OAAO;cAAEqB,QAAAA,EAAAA;YAAS,CAAC,CAAC;YAEnC,IAAIrB,OAAO,EAAE;cAGX,MAAKoC,sBAAsB,GAAGiC,UAAU,CAAC,YAAM;gBAC7C7C,OAAO,EAAE;gBAIT,MAAKkB,WAAW,EAAE;cACpB,CAAC,EAAE,EAAE,CAAkB;YACzB;YAEAc,YAAY,KAAA,IAAA,IAAZA,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZA,YAAY,EAAI;YAChB;UACF;MAAA;IAEJ,CAAC,CAAA;IAAA,eAAA,8CAAA,sBAAA,EAG8Bc,IAAAA,gBAAO,EACpC,UACEC,iBAA6C,EAC7CzC,SAAsC;MAAA,OACnCyC,iBAAiB,CAACzC,SAAS,CAAC;IAAA,EAClC,CAAA;IAAA,eAAA,8CAAA,kBAAA,EAG0BwC,IAAAA,gBAAO,EAChC,UACEE,kBAA0B,EAC1BzB,OAAuC,EACvC0B,IAAgD,EAChDpE,MAAc,EACdqE,QAAgB,EAChBC,UAAkB,EAClBC,WAAmB,EACnBC,SAAiB;MAAA,OACb;QACJC,KAAK,EAAEN,kBAAkB;QACzBzB,OAAO,EAAE;UAAEgC,QAAQ,EAAEhC;QAAQ,CAAC;QAC9B0B,IAAI,EAAEA,IAAI,IAAI;UAAEM,QAAQ,EAAEN;QAAK,CAAC;QAChCzE,OAAO,EAAE,MAAK0B,SAAS;QACvBsD,OAAO,EAAE,MAAKpB,SAAS;QACvBlD,QAAQ,EAAE,MAAKA,QAAQ;QACvBuE,OAAO,EAAE;UACPC,MAAM,EAAE7E;QACV,CAAC;QACD8E,MAAM,EAAE;UACNC,GAAG,EAAEV,QAAQ;UACbW,KAAK,EAAEV,UAAU;UACjBW,MAAM,EAAEV,WAAW;UACnBW,IAAI,EAAEV;QACR;MACF,CAAC;IAAA,CAAC,CACH,CAAA;IAAA,eAAA,8CAAA,KAAA,EAkDatF,KAAK,CAAC0G,SAAS,EAAgB,CAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAjU7CnG,6BAAoB;MAClB,IAAI,CAACC,OAAO,CAAC;QAAEC,OAAO,EAAE,IAAI,CAACC,KAAK,CAACD;MAAQ,CAAC,CAAC;MAC7C,IAAI,CAACE,kBAAkB,GAAG,IAAI;IAChC;EAAA;IAAA;IAAA,OAEAC,4BAAmBC,SAAgB,EAAE;MACnC,mBAA8C,IAAI,CAACH,KAAK;QAAhDI,MAAM,gBAANA,MAAM;QAAEC,gBAAgB,gBAAhBA,gBAAgB;QAAEN,OAAAA,gBAAAA,OAAAA;MAClC,IAAQO,KAAK,GAAaF,MAAM,CAAxBE,KAAK;QAAEC,MAAAA,GAAWH,MAAM,CAAjBG,MAAAA;MAEf,IAAID,KAAK,KAAKH,SAAS,CAACC,MAAM,CAACE,KAAK,EAAE;QACpC,IAAI,CAACF,MAAM,CAACE,KAAK,CAACE,QAAQ,CAACF,KAAK,CAAC;MACnC;MAEA,IAAIC,MAAM,KAAKJ,SAAS,CAACC,MAAM,CAACG,MAAM,EAAE;QACtC,IAAI,CAACH,MAAM,CAACG,MAAM,CAACC,QAAQ,CAACD,MAAM,CAAC;MACrC;MAEA,IAAIF,gBAAgB,KAAKF,SAAS,CAACE,gBAAgB,EAAE;QACnD,IAAI,CAACI,QAAQ,CAACD,QAAQ,CAACE,IAAAA,8BAAqB,EAACL,gBAAgB,CAAC,CAAC;MACjE;MAEA,IAAMM,OAAO,GAAG,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACZ,KAAK,CAAC;MAElD,IACE,IAAI,CAACY,iBAAiB,CAACT,SAAS,CAAC,KAAKQ,OAAO,IAC7C,IAAI,CAACE,WAAW,KAAKF,OAAO,EAC5B;QAMA,IAAI,CAACb,OAAO,CAAC;UAAEC,OAAAA,EAAAA;QAAQ,CAAC,CAAC;MAC3B;IACF;EAAA;IAAA;IAAA,OAEAe,gCAAuB;MACrB,IAAI,CAACd,KAAK,CAACe,OAAO,CAACC,aAAa,EAAE;MAClC,IAAI,CAACf,kBAAkB,GAAG,KAAK;MAC/B,IAAI,CAACgB,oBAAoB,EAAE;IAC7B;EAAA;IAAA;IAAA,OAyOQsE,qCAA4B;MAClC,mBAA8D,IAAI,CAACvF,KAAK;QAAhEI,MAAM,gBAANA,MAAM;QAAEC,gBAAgB,gBAAhBA,gBAAgB;QAAEmF,uBAAAA,gBAAAA,uBAAAA;MAClC,IAAMC,8BAA8B,GAAG,IAAI;MAE3C,IAAMzB,QAAQ,GACZwB,uBAAuB,KAAKpD,SAAS,GACjCoD,uBAAuB,GACvBnF,gBAAgB,KAAK,UAAU,IAC/BA,gBAAgB,KAAK,mBAAmB,GACxC1B,kCAAkC,GAClCD,oCAAoC;MAE1C,IAAI2B,gBAAgB,KAAK,UAAU,EAAE;QACnC,OAAO;UACLqF,SAAS,EAAE,EAAE;UACbC,UAAU,EAAE,CAAC;UACbC,OAAO,EAAE;YAAEP,MAAM,EAAE,CAACjF,MAAM,CAACG,MAAM,GAAGyD;UAAS,CAAC;UAC9CyB,8BAAAA,EAAAA;QACF,CAAC;MACH,CAAC,MAAM,IAAIpF,gBAAgB,KAAK,mBAAmB,EAAE;QACnD,OAAO;UACLqF,SAAS,EAAE,EAAE;UACbC,UAAU,EAAE,CAAC,CAAC;UACdC,OAAO,EAAE;YAAET,GAAG,EAAE,CAAC/E,MAAM,CAACG,MAAM,GAAGyD;UAAS,CAAC;UAC3CyB,8BAAAA,EAAAA;QACF,CAAC;MACH,CAAC,MAAM;QACL,IAAMG,OAAO,GAAG,CAACxF,MAAM,CAACE,KAAK,GAAG0D,QAAQ;QACxC,IAAM6B,kBAAkB,GAAGnF,IAAAA,8BAAqB,EAACL,gBAAgB,CAAC;QAElE,IAAIwF,kBAAkB,KAAK,CAAC,EAAE;UAC5B,OAAO;YACLC,UAAU,EAAE,CAAC;YACbC,SAAS,EAAE,EAAE;YACbH,OAAO,EAAE;cAAER,KAAK,EAAEQ;YAAQ,CAAC;YAC3BH,8BAAAA,EAAAA;UACF,CAAC;QACH,CAAC,MAAM;UACL,OAAO;YACLK,UAAU,EAAE,CAAC,CAAC;YACdC,SAAS,EAAE,EAAE;YACbH,OAAO,EAAE;cAAEN,IAAI,EAAEM;YAAQ,CAAC;YAC1BH,8BAAAA,EAAAA;UACF,CAAC;QACH;MACF;IACF;EAAA;IAAA;IAAA,OAIAQ,kBAAS;MACP,mBAmBI,IAAI,CAACjG,KAAK;QAlBZsE,iBAAiB,gBAAjBA,iBAAiB;QACjBC,kBAAkB,gBAAlBA,kBAAkB;QAClBzB,OAAO,gBAAPA,OAAO;QACP/B,OAAO,gBAAPA,OAAO;QACPyD,IAAI,gBAAJA,IAAI;QACJpE,MAAM,gBAANA,MAAM;QACN8E,MAAM,gBAANA,MAAM;QACNvF,OAAO,gBAAPA,OAAO;QACPuG,cAAc,gBAAdA,cAAc;QACd1G,aAAa,gBAAbA,aAAa;QACbC,cAAc,gBAAdA,cAAc;QACdY,gBAAgB,gBAAhBA,gBAAgB;QAChB8F,mBAAmB,gBAAnBA,mBAAmB;QACnBC,iBAAiB,gBAAjBA,iBAAiB;QACjBC,QAAQ,gBAARA,QAAQ;QACQE,oBAAoB,gBAApCD,cAAc;QACdE,YAAY,gBAAZA,YAAY;QACTC,IAAAA;MAGL,IAAMC,kBAAkB,GAAG,IAAI,CAACC,gBAAgB,CAC9CpC,kBAAkB,EAClBzB,OAAO,EACP0B,IAAI,EACJpE,MAAM,EACN8E,MAAM,CAACC,GAAG,EACVD,MAAM,CAACE,KAAK,EACZF,MAAM,CAACG,MAAM,EACbH,MAAM,CAACI,IAAI,CACZ;MAED,IAAMsB,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,CACjDvC,iBAAiB,EACjBoC,kBAAkB,CACnB;MAED,IAAQJ,cAAc,GACpBM,iBAAiB,CADXN,cAAc;QAAEQ,SAAS,GAC/BF,iBAAiB,CADKE,SAAS;QAAEC,YAAY,GAC7CH,iBAAiB,CADgBG,YAAY;QAAEC,WAAAA,GAC/CJ,iBAAiB,CAD8BI,WAAAA;MAGjD,IAAMC,kBAAkB,GAAGxH,cAAc,GACrCyB,qBAAQ,CAACgG,KAAK,CACZ,CACE;QACE9D,WAAW,EACT/C,gBAAgB,KAAK,UAAU,IAC/BA,gBAAgB,KAAK,mBAAmB,GACpC;UAAE6D,YAAY,EAAEnD;QAAQ,CAAC,GACzB;UAAEoD,YAAY,EAAEpD;QAAQ;MAChC,CAAC,CACF,EACD;QAAEnC,eAAAA,EAAAA;MAAgB,CAAC,CACpB,GACDwD,SAAS;MAEb,0BAA4BlD,uBAAU,CAACC,OAAO,CAACqH,YAAY,IAAI,CAAC,CAAC,CAAC;QAA1DW,eAAAA,uBAAAA,eAAAA;MACR,IAAMC,aAAa,GACjB,OAAOD,eAAe,KAAK,QAAQ,GAC/BE,IAAAA,cAAK,EAACF,eAAe,CAAC,CAACG,KAAK,EAAE,KAAK,CAAC,GACpC,KAAK;MAEX,OACE,KAAA,CAAA,aAAA,CAAC,6BAAoB,CAAC,QAAQ,EAAA;QAAC,KAAK,EAAEZ;MAAmB,CAAA,EAIrD7H,qBAAQ,CAACC,EAAE,KAAK,KAAK,IACrBoH,cAAc,IACd1B,IAAI,IACJ+C,sBAAsB,CAACjD,iBAAiB,CAAC,GACvC,KAAA,CAAA,aAAA,CAAC,8BAAqB,EAAA;QACpB,IAAI,EAAE8B,iBAAkB;QACxB,MAAM,EAAEhG,MAAO;QACf,MAAM,EAAE8E,MAAO;QACf,KAAK,EAAE4B;MAAU,CAAA,CACjB,GACA,IAAI,EAEV,KAAA,CAAA,aAAA,CAAC,qBAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE;UAKL1H,OAAO,EAAE0D;QACX,CAAA;QAEA,WAAW,EAAE;MAAM,CAAA,CACnB,EACF,KAAA,CAAA,aAAA,CAAC,iBAAI,EAAA,QAAA,CAAA;QAAC,aAAa,EAAC;MAAU,CAAA,EAAK2D,IAAI,CAAA,EACpCP,cAAc,GACb,KAAA,CAAA,aAAA,CAAC,iBAAI,EAAA;QAAC,aAAa,EAAC,UAAU;QAAC,KAAK,EAAEhH,uBAAU,CAACsI;MAAa,CAAA,EAC3D7H,OAAO,CAAC;QAAEX,KAAK,EAAE+H;MAAa,CAAC,CAAC,CAC5B,GACL,IAAI,EACR,KAAA,CAAA,aAAA,CAAC,qBAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CAACnH,MAAM,CAAC6H,SAAS,EAAEnB,cAAc,EAAEC,oBAAoB,CAAE;QAChE,aAAa,EAAC;MAAU,CAAA,EAExB,KAAA,CAAA,aAAA,CAAC,iCAAiB,EAAA,QAAA,CAAA;QAChB,OAAO,EAAEnG,MAAM,CAACE,KAAK,KAAK,CAAC,IAAIb,cAAe;QAC9C,cAAc,EAAEwH,kBAAmB;QACnC,oBAAoB,EAAE,IAAI,CAACS;MAAyB,CAAA,EAChD,IAAI,CAACnC,yBAAyB,EAAE,CAAA,EAEpC,KAAA,CAAA,aAAA,CAAC,qBAAQ,CAAC,IAAI,EAAA;QACZ,8BAA8B,EAAExG,eAAe,CAAC+H,SAAS,CAAE;QAC3D,KAAK,EAAE,CAAClH,MAAM,CAAC6H,SAAS,EAAEX,SAAS;MAAE,CAAA,EAEpCtH,aAAa,IAAIwH,WAAW,IAAI,CAACI,aAAa,GAC7C,KAAA,CAAA,aAAA,CAAC,qBAAQ,CAAC,IAAI,EAAA;QACZ,KAAK,EAAE,CACLxH,MAAM,CAAC+H,MAAM,EACbtH,gBAAgB,KAAK,YAAY,GAC7B,CAACT,MAAM,CAACgI,gBAAgB,EAAEhI,MAAM,CAACiI,UAAU,CAAC,GAC5CxH,gBAAgB,KAAK,qBAAqB,GAC1C,CAACT,MAAM,CAACgI,gBAAgB,EAAEhI,MAAM,CAACkI,WAAW,CAAC,GAC7CzH,gBAAgB,KAAK,UAAU,GAC/B,CAACT,MAAM,CAACmI,cAAc,EAAEnI,MAAM,CAACoI,SAAS,CAAC,GACzC,CAACpI,MAAM,CAACmI,cAAc,EAAEnI,MAAM,CAACqI,YAAY,CAAC,EAChD;UAAEd,eAAAA,EAAAA;QAAgB,CAAC,EACnBH,WAAW,CACX;QACF,aAAa,EAAC;MAAM,CAAA,CACpB,GACA,IAAI,EACR,KAAA,CAAA,aAAA,CAAC,kBAAS,EAAA;QACR,GAAG,EAAE,IAAI,CAACnE,GAAI;QACd,OAAO,EAAEsD,mBAAoB;QAC7B,MAAM,EAAE/F,MAAO;QACf,KAAK,EAAEoG;MAAa,CAAA,EAEnBH,QAAQ,CACC,CACE,CACE,CACN,CACX,CACuB;IAEpC;EAAA;EAAA;AAAA,EA/dgC/G,KAAK,CAACC,SAAS;AAAA;AAgehD,eAAA,CAheoBF,IAAI,EAAA,cAAA,EACD;EACpBG,aAAa,EAAE,KAAK;EACpBC,cAAc,EAAE,IAAI;EACpBC,qBAAqB,EAAEnB,uBAAuB;EAC9CoB,OAAO,EAAE,iBAAA,KAAA,EAAA;IAAA,IACPX,KAAAA,GAGD,KAAA,CAHCA,KAAAA;IAGD,OACCA,KAAK,GACH,KAAA,CAAA,aAAA,CAAC,qBAAQ,CAAC,IAAI,EAAA;MAAC,aAAa,EAAC,MAAM;MAAC,KAAK,EAAE,CAACY,MAAM,CAACD,OAAO,EAAEX,KAAK;IAAE,CAAA,CAAG,GACpE,IAAI;EAAA;AACZ,CAAC,CAAA;AAqdI,IAAMuI,sBAAsB,GACjCW,SADWX,sBAAsB,CACjCW,qBAAiD,EAC9C;EACH,OACEA,qBAAqB,KAAKC,+CAAuB,IAEjDD,qBAAqB,CAACE,IAAI,KAAK,yBAAyB;AAE5D,CAAC;AAAA;AAED,IAAMxI,MAAM,GAAGV,uBAAU,CAACmJ,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE;EACR,CAAC;EACD3I,OAAO,EAAE;IACP2I,IAAI,EAAE,CAAC;IACPnB,eAAe,EAAE;EACnB,CAAC;EACDQ,MAAM,EAAE;IACNY,QAAQ,EAAE,UAAU;IACpBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,MAAM;IACnBC,aAAa,EAAE;EACjB,CAAC;EACDd,gBAAgB,EAAE;IAChBzC,GAAG,EAAE,CAAC;IACNE,MAAM,EAAE,CAAC;IACT/E,KAAK,EAAE,CAAC;IACRqI,YAAY,EAAE;MAAErI,KAAK,EAAE,CAAC,CAAC;MAAEC,MAAM,EAAE;IAAE;EACvC,CAAC;EACDsH,UAAU,EAAE;IACVvC,IAAI,EAAE;EACR,CAAC;EACDwC,WAAW,EAAE;IACX1C,KAAK,EAAE;EACT,CAAC;EACD2C,cAAc,EAAE;IACdzC,IAAI,EAAE,CAAC;IACPF,KAAK,EAAE,CAAC;IACR7E,MAAM,EAAE,CAAC;IACToI,YAAY,EAAE;MAAErI,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAE;EACvC,CAAC;EACDyH,SAAS,EAAE;IACT7C,GAAG,EAAE;EACP,CAAC;EACD8C,YAAY,EAAE;IACZ5C,MAAM,EAAE;EACV;AACF,CAAC,CAAC","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport Color from 'color';\nimport * as React from 'react';\nimport { Animated, InteractionManager, Platform, StyleSheet, View } from 'react-native';\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport { GestureState, PanGestureHandler } from '../GestureHandler';\nimport ModalStatusBarManager from '../ModalStatusBarManager';\nimport CardSheet from './CardSheet';\nconst GESTURE_VELOCITY_IMPACT = 0.3;\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nconst useNativeDriver = Platform.OS !== 'web';\nconst hasOpacityStyle = style => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n  return false;\n};\nexport default class Card extends React.Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"isCurrentlyMounted\", false);\n    _defineProperty(this, \"isClosing\", new Animated.Value(FALSE));\n    _defineProperty(this, \"inverted\", new Animated.Value(getInvertedMultiplier(this.props.gestureDirection)));\n    _defineProperty(this, \"layout\", {\n      width: new Animated.Value(this.props.layout.width),\n      height: new Animated.Value(this.props.layout.height)\n    });\n    _defineProperty(this, \"isSwiping\", new Animated.Value(FALSE));\n    _defineProperty(this, \"interactionHandle\", void 0);\n    _defineProperty(this, \"pendingGestureCallback\", void 0);\n    _defineProperty(this, \"lastToValue\", void 0);\n    _defineProperty(this, \"animate\", _ref => {\n      let {\n        closing,\n        velocity\n      } = _ref;\n      const {\n        gesture,\n        transitionSpec,\n        onOpen,\n        onClose,\n        onTransition\n      } = this.props;\n      const toValue = this.getAnimateToValue({\n        ...this.props,\n        closing\n      });\n      this.lastToValue = toValue;\n      this.isClosing.setValue(closing ? TRUE : FALSE);\n      const spec = closing ? transitionSpec.close : transitionSpec.open;\n      const animation = spec.animation === 'spring' ? Animated.spring : Animated.timing;\n      this.setPointerEventsEnabled(!closing);\n      this.handleStartInteraction();\n      clearTimeout(this.pendingGestureCallback);\n      onTransition === null || onTransition === void 0 ? void 0 : onTransition({\n        closing,\n        gesture: velocity !== undefined\n      });\n      animation(gesture, {\n        ...spec.config,\n        velocity,\n        toValue,\n        useNativeDriver,\n        isInteraction: false\n      }).start(_ref2 => {\n        let {\n          finished\n        } = _ref2;\n        this.handleEndInteraction();\n        clearTimeout(this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (this.isCurrentlyMounted) {\n            // Make sure to re-open screen if it wasn't removed\n            this.forceUpdate();\n          }\n        }\n      });\n    });\n    _defineProperty(this, \"getAnimateToValue\", _ref3 => {\n      let {\n        closing,\n        layout,\n        gestureDirection\n      } = _ref3;\n      if (!closing) {\n        return 0;\n      }\n      return getDistanceForDirection(layout, gestureDirection);\n    });\n    _defineProperty(this, \"setPointerEventsEnabled\", enabled => {\n      var _this$ref$current;\n      const pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$ref$current = this.ref.current) === null || _this$ref$current === void 0 ? void 0 : _this$ref$current.setPointerEvents(pointerEvents);\n    });\n    _defineProperty(this, \"handleStartInteraction\", () => {\n      if (this.interactionHandle === undefined) {\n        this.interactionHandle = InteractionManager.createInteractionHandle();\n      }\n    });\n    _defineProperty(this, \"handleEndInteraction\", () => {\n      if (this.interactionHandle !== undefined) {\n        InteractionManager.clearInteractionHandle(this.interactionHandle);\n        this.interactionHandle = undefined;\n      }\n    });\n    _defineProperty(this, \"handleGestureStateChange\", _ref4 => {\n      let {\n        nativeEvent\n      } = _ref4;\n      const {\n        layout,\n        onClose,\n        onGestureBegin,\n        onGestureCanceled,\n        onGestureEnd,\n        gestureDirection,\n        gestureVelocityImpact\n      } = this.props;\n      switch (nativeEvent.state) {\n        case GestureState.ACTIVE:\n          this.isSwiping.setValue(TRUE);\n          this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case GestureState.CANCELLED:\n          {\n            this.isSwiping.setValue(FALSE);\n            this.handleEndInteraction();\n            const velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            this.animate({\n              closing: this.props.closing,\n              velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case GestureState.END:\n          {\n            this.isSwiping.setValue(FALSE);\n            let distance;\n            let translation;\n            let velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              velocity = nativeEvent.velocityX;\n            }\n            const closing = (translation + velocity * gestureVelocityImpact) * getInvertedMultiplier(gestureDirection) > distance / 2 ? velocity !== 0 || translation !== 0 : this.props.closing;\n            this.animate({\n              closing,\n              velocity\n            });\n            if (closing) {\n              // We call onClose with a delay to make sure that the animation has already started\n              // This will make sure that the state update caused by this doesn't affect start of animation\n              this.pendingGestureCallback = setTimeout(() => {\n                onClose();\n\n                // Trigger an update after we dispatch the action to remove the screen\n                // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n                this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n    _defineProperty(this, \"getInterpolatedStyle\", memoize((styleInterpolator, animation) => styleInterpolator(animation)));\n    _defineProperty(this, \"getCardAnimation\", memoize((interpolationIndex, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) => ({\n      index: interpolationIndex,\n      current: {\n        progress: current\n      },\n      next: next && {\n        progress: next\n      },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft\n      }\n    })));\n    _defineProperty(this, \"ref\", /*#__PURE__*/React.createRef());\n  }\n  componentDidMount() {\n    this.animate({\n      closing: this.props.closing\n    });\n    this.isCurrentlyMounted = true;\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      layout,\n      gestureDirection,\n      closing\n    } = this.props;\n    const {\n      width,\n      height\n    } = layout;\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n    const toValue = this.getAnimateToValue(this.props);\n    if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({\n        closing\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.props.gesture.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n  gestureActivationCriteria() {\n    const {\n      layout,\n      gestureDirection,\n      gestureResponseDistance\n    } = this.props;\n    const enableTrackpadTwoFingerGesture = true;\n    const distance = gestureResponseDistance !== undefined ? gestureResponseDistance : gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? GESTURE_RESPONSE_DISTANCE_VERTICAL : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: {\n          bottom: -layout.height + distance\n        },\n        enableTrackpadTwoFingerGesture\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: {\n          top: -layout.height + distance\n        },\n        enableTrackpadTwoFingerGesture\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: {\n            right: hitSlop\n          },\n          enableTrackpadTwoFingerGesture\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: {\n            left: hitSlop\n          },\n          enableTrackpadTwoFingerGesture\n        };\n      }\n    }\n  }\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      headerDarkContent,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n    const interpolationProps = this.getCardAnimation(interpolationIndex, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n    const interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, interpolationProps);\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle\n    } = interpolatedStyle;\n    const handleGestureEvent = gestureEnabled ? Animated.event([{\n      nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n        translationY: gesture\n      } : {\n        translationX: gesture\n      }\n    }], {\n      useNativeDriver\n    }) : undefined;\n    const {\n      backgroundColor\n    } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent = typeof backgroundColor === 'string' ? Color(backgroundColor).alpha() === 0 : false;\n    return /*#__PURE__*/React.createElement(CardAnimationContext.Provider, {\n      value: interpolationProps\n    },\n    // StatusBar messes with translucent status bar on Android\n    // So we should only enable it on iOS\n    Platform.OS === 'ios' && overlayEnabled && next && getIsModalPresentation(styleInterpolator) ? /*#__PURE__*/React.createElement(ModalStatusBarManager, {\n      dark: headerDarkContent,\n      layout: layout,\n      insets: insets,\n      style: cardStyle\n    }) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: {\n        // This is a dummy style that doesn't actually change anything visually.\n        // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n        // If we disable animations and hide header, it could end up making the value unused.\n        // So we have this dummy style that will always be used regardless of what else changed.\n        opacity: current\n      }\n      // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n      ,\n      collapsable: false\n    }), /*#__PURE__*/React.createElement(View, _extends({\n      pointerEvents: \"box-none\"\n    }, rest), overlayEnabled ? /*#__PURE__*/React.createElement(View, {\n      pointerEvents: \"box-none\",\n      style: StyleSheet.absoluteFill\n    }, overlay({\n      style: overlayStyle\n    })) : null, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.container, containerStyle, customContainerStyle],\n      pointerEvents: \"box-none\"\n    }, /*#__PURE__*/React.createElement(PanGestureHandler, _extends({\n      enabled: layout.width !== 0 && gestureEnabled,\n      onGestureEvent: handleGestureEvent,\n      onHandlerStateChange: this.handleGestureStateChange\n    }, this.gestureActivationCriteria()), /*#__PURE__*/React.createElement(Animated.View, {\n      needsOffscreenAlphaCompositing: hasOpacityStyle(cardStyle),\n      style: [styles.container, cardStyle]\n    }, shadowEnabled && shadowStyle && !isTransparent ? /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n        backgroundColor\n      }, shadowStyle],\n      pointerEvents: \"none\"\n    }) : null, /*#__PURE__*/React.createElement(CardSheet, {\n      ref: this.ref,\n      enabled: pageOverflowEnabled,\n      layout: layout,\n      style: contentStyle\n    }, children))))));\n  }\n}\n_defineProperty(Card, \"defaultProps\", {\n  shadowEnabled: false,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: _ref5 => {\n    let {\n      style\n    } = _ref5;\n    return style ? /*#__PURE__*/React.createElement(Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\nexport const getIsModalPresentation = cardStyleInterpolator => {\n  return cardStyleInterpolator === forModalPresentationIOS ||\n  // Handle custom modal presentation interpolators as well\n  cardStyleInterpolator.name === 'forModalPresentationIOS';\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});\n//# sourceMappingURL=Card.js.map"]},"metadata":{},"sourceType":"script"}