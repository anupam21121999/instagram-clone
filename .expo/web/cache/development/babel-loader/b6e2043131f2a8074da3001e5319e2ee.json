{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport Validator from 'email-validator';\nimport { firebase, db } from \"../../firebase\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginForm = function LoginForm(_ref) {\n  var navigation = _ref.navigation;\n  var LoginFormSchema = yup.object().shape({\n    email: yup.string().email().required('An email is required'),\n    password: yup.string().min(6, 'Your password must have 6 characters')\n  });\n  var onLogin = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password) {\n      try {\n        yield firebase.auth().signInWithEmailAndPassword(email, password);\n        console.log('Firebase Login Successful', email, password);\n      } catch (error) {\n        Alert.alert(error.message);\n      }\n    });\n    return function onLogin(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.wrapper,\n    children: _jsx(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      onSubmit: function onSubmit(values) {\n        onLogin(values.email, values.password);\n      },\n      validationSchema: LoginFormSchema,\n      validateOnMount: true,\n      children: function children(_ref3) {\n        var handleBlur = _ref3.handleBlur,\n          handleChange = _ref3.handleChange,\n          handleSubmit = _ref3.handleSubmit,\n          values = _ref3.values,\n          errors = _ref3.errors,\n          isValid = _ref3.isValid,\n          Alert = _ref3.Alert;\n        return _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: [styles.inputField, {\n              borderColor: values.email.length < 1 || Validator.validate(values.email) ? '#ccc' : 'red'\n            }],\n            children: _jsx(TextInput, {\n              placeholder: \"Phone number, Username or Email\",\n              autoCapitalize: \"none\",\n              keyboardType: \"email-address\",\n              textContentType: \"emailAddress\",\n              autoFocus: true,\n              onChangeText: handleChange('email'),\n              onBlur: handleBlur('email'),\n              value: values.email\n            })\n          }), _jsx(View, {\n            style: [styles.inputField, {\n              borderColor: 1 > values.password.length || values.password.length >= 6 ? '#ccc' : 'red'\n            }],\n            children: _jsx(TextInput, {\n              placeholder: \"Password\",\n              autoCapitalize: \"none\",\n              textContentType: \"password\",\n              autoCorrect: false,\n              secureTextEntry: true,\n              onChangeText: handleChange('password'),\n              onBlur: handleBlur('password'),\n              value: values.password\n            })\n          }), _jsx(View, {\n            style: {\n              alignItems: 'flex-end',\n              marginTop: 20\n            },\n            children: _jsx(Text, {\n              style: {\n                color: '#6BB0F5',\n                marginBottom: 30\n              },\n              children: \"Forgot Password\"\n            })\n          }), _jsx(Pressable, {\n            style: styles.button(isValid),\n            titleSize: 20,\n            onPress: handleSubmit,\n            disabled: !isValid,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"LOGIN\"\n            })\n          }), _jsxs(View, {\n            style: styles.signupContainer,\n            children: [_jsx(Text, {\n              children: \"Don't have an account?\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.push('SignupScreen');\n              },\n              children: _jsx(Text, {\n                style: {\n                  Color: '#0096F6'\n                },\n                children: \"      Sign up\"\n              })\n            })]\n          })]\n        });\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    marginTop: 80\n  },\n  inputField: {\n    borderRadius: 4,\n    padding: 12,\n    marginBottom: 10,\n    borderWidth: 1\n  },\n  button: function button(isValid) {\n    return {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: isValid ? '#0096F6' : '#9ACAF7',\n      maxHeight: 42,\n      borderRadius: 4\n    };\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  signupContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 50\n  }\n});\nexport default LoginForm;","map":{"version":3,"names":["React","yup","Formik","Validator","firebase","db","LoginForm","navigation","LoginFormSchema","object","shape","email","string","required","password","min","onLogin","auth","signInWithEmailAndPassword","console","log","error","Alert","alert","message","styles","wrapper","values","handleBlur","handleChange","handleSubmit","errors","isValid","inputField","borderColor","length","validate","alignItems","marginTop","color","marginBottom","button","buttonText","signupContainer","push","Color","StyleSheet","create","borderRadius","padding","borderWidth","justifyContent","backgroundColor","maxHeight","fontSize","fontWeight","flexDirection","width"],"sources":["E:/Instagram-Clone/components/loginScreen/LoginForm.js"],"sourcesContent":["import React from 'react'\r\nimport {Text, View, TextInput, StyleSheet, Pressable, TouchableOpacity } from 'react-native'\r\nimport * as yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport Validator from 'email-validator';\r\nimport {firebase, db} from '../../firebase'\r\nimport { Alert } from 'react-native';\r\n\r\nconst LoginForm = ({navigation}) => {\r\n\r\n    const LoginFormSchema = yup.object().shape({\r\n        email: yup.string().email().required('An email is required'),\r\n        password: yup.string().min(6, 'Your password must have 6 characters'),\r\n    });\r\n\r\n    const onLogin = async (email, password) =>{\r\n      try {\r\n        await firebase.auth().signInWithEmailAndPassword(email, password)\r\n        console.log('Firebase Login Successful', email, password)\r\n      } catch (error) {\r\n        Alert.alert(error.message)\r\n      }\r\n    }\r\n\r\n  return (\r\n    <View style={styles.wrapper}>\r\n    <Formik\r\n        initialValues={{email: '', password: ''}}\r\n        onSubmit={values =>{\r\n            onLogin(values.email, values.password)\r\n        }}\r\n        validationSchema={LoginFormSchema}\r\n        validateOnMount={true}\r\n    >\r\n     {({handleBlur, handleChange, handleSubmit, values, errors, isValid, Alert})=>\r\n        <>\r\n    <View style={[styles.inputField,\r\n        {\r\n          borderColor:\r\n          values.email.length < 1 || Validator.validate(values.email) ? '#ccc' : 'red'\r\n        },\r\n    ]}>\r\n      <TextInput placeholder='Phone number, Username or Email'\r\n                autoCapitalize='none'\r\n                keyboardType='email-address'\r\n                textContentType='emailAddress'\r\n                autoFocus={true}\r\n                onChangeText={handleChange('email')}\r\n                onBlur={handleBlur('email')}\r\n                value={values.email}\r\n      />\r\n      </View>\r\n      <View style={[styles.inputField,\r\n        {\r\n          borderColor:\r\n          1 > values.password.length || values.password.length >=6 ? '#ccc' : 'red'\r\n        },\r\n    ]}>\r\n      <TextInput placeholder='Password'\r\n                autoCapitalize='none'\r\n                textContentType='password'\r\n                autoCorrect={false}\r\n                secureTextEntry={true}\r\n                onChangeText={handleChange('password')}\r\n                onBlur={handleBlur('password')}\r\n                value={values.password}\r\n      />\r\n      </View>\r\n      <View style={{alignItems: 'flex-end', marginTop: 20}}>\r\n        <Text style={{color: '#6BB0F5', marginBottom: 30}}>Forgot Password</Text>\r\n      </View>\r\n      <Pressable style={styles.button(isValid)} titleSize={20} onPress={handleSubmit} disabled={!isValid}>\r\n        <Text style={styles.buttonText}>LOGIN</Text>\r\n      </Pressable>\r\n      <View style={styles.signupContainer}>\r\n        <Text>Don't have an account?</Text>\r\n        <TouchableOpacity onPress={() => navigation.push('SignupScreen')}>\r\n            <Text style={{Color: '#0096F6'}}>      Sign up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      </>\r\n     }\r\n      </Formik>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        marginTop: 80,\r\n    },\r\n    inputField: {\r\n        borderRadius: 4,\r\n        padding: 12,\r\n        marginBottom: 10,\r\n        borderWidth: 1,\r\n    },\r\n    button: isValid =>({\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: isValid ? '#0096F6' : '#9ACAF7',\r\n        maxHeight: 42,\r\n        borderRadius: 4,\r\n    }),\r\n    buttonText: {\r\n        fontSize: 20,\r\n        color: '#fff',\r\n        fontWeight: '600',\r\n    },\r\n    signupContainer: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        marginTop: 50,\r\n    }\r\n});\r\n\r\nexport default LoginForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}