{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePreventRemove;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useLatestCallback = _interopRequireDefault(require(\"use-latest-callback\"));\nvar _useNavigation = _interopRequireDefault(require(\"./useNavigation\"));\nvar _usePreventRemoveContext = _interopRequireDefault(require(\"./usePreventRemoveContext\"));\nvar _useRoute2 = _interopRequireDefault(require(\"./useRoute\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction usePreventRemove(preventRemove, callback) {\n  var _React$useState = React.useState(function () {\n      return (0, _nonSecure.nanoid)();\n    }),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n    id = _React$useState2[0];\n  var navigation = (0, _useNavigation.default)();\n  var _useRoute = (0, _useRoute2.default)(),\n    routeKey = _useRoute.key;\n  var _usePreventRemoveCont = (0, _usePreventRemoveContext.default)(),\n    setPreventRemove = _usePreventRemoveCont.setPreventRemove;\n  React.useEffect(function () {\n    setPreventRemove(id, routeKey, preventRemove);\n    return function () {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n  var beforeRemoveListener = (0, _useLatestCallback.default)(function (e) {\n    if (!preventRemove) {\n      return;\n    }\n    e.preventDefault();\n    callback({\n      data: e.data\n    });\n  });\n  React.useEffect(function () {\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('beforeRemove', beforeRemoveListener);\n  }, [navigation, beforeRemoveListener]);\n}","map":{"version":3,"sources":["usePreventRemove.tsx"],"names":["usePreventRemove","preventRemove","callback","id","React","useState","nanoid","navigation","useNavigation","key","routeKey","useRoute","setPreventRemove","usePreventRemoveContext","useEffect","beforeRemoveListener","useLatestCallback","e","preventDefault","data","addListener"],"mappings":";;;;;;AACA;AACA;AACA;AAGA;AACA;AACA;AAAiC;AAAA;AAQlB,SAASA,gBAAgB,CACtCC,aAAsB,EACtBC,QAAmE,EACnE;EACA,sBAAaE,KAAK,CAACC,QAAQ,CAAC;MAAA,OAAMC,IAAAA,iBAAM,GAAE;IAAA,EAAC;IAAA;IAApCH,EAAE;EAET,IAAMI,UAAU,GAAGC,IAAAA,sBAAa,GAAE;EAClC,gBAA0BG,IAAAA,kBAAQ,GAAE;IAAvBD,QAAAA,aAALD,GAAG;EAEX,4BAA6BI,IAAAA,gCAAuB,GAAE;IAA9CD,gBAAAA,yBAAAA,gBAAAA;EAERR,KAAK,CAACU,SAAS,CAAC,YAAM;IACpBF,gBAAgB,CAACT,EAAE,EAAEO,QAAQ,EAAET,aAAa,CAAC;IAC7C,OAAO,YAAM;MACXW,gBAAgB,CAACT,EAAE,EAAEO,QAAQ,EAAE,KAAK,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACE,gBAAgB,EAAET,EAAE,EAAEO,QAAQ,EAAET,aAAa,CAAC,CAAC;EAEnD,IAAMc,oBAAoB,GAAGC,IAAAA,0BAAiB,EAE3CC,UAAAA,CAAC,EAAK;IACP,IAAI,CAAChB,aAAa,EAAE;MAClB;IACF;IAEAgB,CAAC,CAACC,cAAc,EAAE;IAElBhB,QAAQ,CAAC;MAAEiB,IAAI,EAAEF,CAAC,CAACE;IAAK,CAAC,CAAC;EAC5B,CAAC,CAAC;EAEFf,KAAK,CAACU,SAAS,CACb;IAAA,OAAMP,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAEa,WAAW,CAAC,cAAc,EAAEL,oBAAoB,CAAC;EAAA,GACnE,CAACR,UAAU,EAAEQ,oBAAoB,CAAC,CACnC;AACH","sourceRoot":"../../src","sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\nimport useNavigation from './useNavigation';\nimport usePreventRemoveContext from './usePreventRemoveContext';\nimport useRoute from './useRoute';\n\n/**\n * Hook to prevent screen from being removed. Can be used to prevent users from leaving the screen.\n *\n * @param preventRemove Boolean indicating whether to prevent screen from being removed.\n * @param callback Function which is executed when screen was prevented from being removed.\n */\nexport default function usePreventRemove(preventRemove, callback) {\n  const [id] = React.useState(() => nanoid());\n  const navigation = useNavigation();\n  const {\n    key: routeKey\n  } = useRoute();\n  const {\n    setPreventRemove\n  } = usePreventRemoveContext();\n  React.useEffect(() => {\n    setPreventRemove(id, routeKey, preventRemove);\n    return () => {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n  const beforeRemoveListener = useLatestCallback(e => {\n    if (!preventRemove) {\n      return;\n    }\n    e.preventDefault();\n    callback({\n      data: e.data\n    });\n  });\n  React.useEffect(() => navigation === null || navigation === void 0 ? void 0 : navigation.addListener('beforeRemove', beforeRemoveListener), [navigation, beforeRemoveListener]);\n}\n//# sourceMappingURL=usePreventRemove.js.map"]},"metadata":{},"sourceType":"script"}