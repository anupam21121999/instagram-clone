{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ThemeContext = exports.ThemeConsumer = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _deepmerge = _interopRequireDefault(require(\"deepmerge\"));\nvar _colors = _interopRequireDefault(require(\"./colors\"));\nvar _colorsDark = _interopRequireDefault(require(\"./colorsDark\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"E:\\\\Instagram-Clone\\\\node_modules\\\\react-native-elements\\\\dist\\\\config\\\\ThemeProvider.js\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar ThemeContext = _react.default.createContext({\n  theme: {\n    colors: _colors.default\n  }\n});\nexports.ThemeContext = ThemeContext;\nvar ThemeProvider = function (_React$Component) {\n  (0, _inherits2.default)(ThemeProvider, _React$Component);\n  var _super = _createSuper(ThemeProvider);\n  function ThemeProvider(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, ThemeProvider);\n    _this = _super.call(this, props);\n    _this.updateTheme = function (updates) {\n      _this.setState(function (_ref) {\n        var theme = _ref.theme;\n        return {\n          theme: (0, _deepmerge.default)(theme, updates)\n        };\n      });\n    };\n    _this.replaceTheme = function (theme) {\n      _this.setState(function () {\n        return {\n          theme: (0, _deepmerge.default)(_this.defaultTheme, theme)\n        };\n      });\n    };\n    _this.getTheme = function () {\n      return _this.state.theme;\n    };\n    var defaultColors = props.useDark ? _colorsDark.default : _colors.default;\n    _this.defaultTheme = (0, _deepmerge.default)({\n      colors: defaultColors\n    }, props.theme);\n    _this.state = {\n      theme: _this.defaultTheme,\n      useDark: Boolean(props.useDark)\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(ThemeProvider, [{\n    key: \"render\",\n    value: function render() {\n      return (0, _jsxRuntime.jsx)(ThemeContext.Provider, {\n        value: {\n          theme: this.state.theme,\n          updateTheme: this.updateTheme,\n          replaceTheme: this.replaceTheme\n        },\n        children: this.props.children\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var useDark = props.useDark;\n      var isTheme = function isTheme(theme) {\n        return !(Object.keys(theme).length === 0 && theme.constructor === Object);\n      };\n      if (useDark !== state.useDark || isTheme(props.theme) && props.theme !== state.theme) {\n        var defaultColors = useDark ? _colorsDark.default : _colors.default;\n        return {\n          theme: (0, _deepmerge.default)(state.theme, (0, _deepmerge.default)({\n            colors: defaultColors\n          }, props.theme)),\n          useDark: useDark\n        };\n      }\n      return null;\n    }\n  }]);\n  return ThemeProvider;\n}(_react.default.Component);\nexports.default = ThemeProvider;\nThemeProvider.defaultProps = {\n  theme: {},\n  useDark: false\n};\nvar ThemeConsumer = ThemeContext.Consumer;\nexports.ThemeConsumer = ThemeConsumer;","map":{"version":3,"names":["ThemeContext","React","createContext","theme","colors","ThemeProvider","props","updateTheme","updates","setState","deepmerge","replaceTheme","defaultTheme","getTheme","state","defaultColors","useDark","darkColors","Boolean","children","isTheme","Object","keys","length","constructor","Component","defaultProps","ThemeConsumer","Consumer"],"sources":["E:/Instagram-Clone/node_modules/react-native-elements/dist/config/ThemeProvider.js"],"sourcesContent":["import React from 'react';\nimport deepmerge from 'deepmerge';\nimport colors from './colors';\nimport darkColors from './colorsDark';\nexport const ThemeContext = React.createContext({\n    theme: {\n        colors,\n    },\n});\nexport default class ThemeProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateTheme = (updates) => {\n            this.setState(({ theme }) => ({\n                theme: deepmerge(theme, updates),\n            }));\n        };\n        this.replaceTheme = (theme) => {\n            this.setState(() => ({\n                theme: deepmerge(this.defaultTheme, theme),\n            }));\n        };\n        this.getTheme = () => this.state.theme;\n        const defaultColors = props.useDark ? darkColors : colors;\n        this.defaultTheme = deepmerge({\n            colors: defaultColors,\n        }, props.theme);\n        this.state = {\n            theme: this.defaultTheme,\n            useDark: Boolean(props.useDark),\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        const { useDark } = props;\n        const isTheme = (theme) => {\n            return !(Object.keys(theme).length === 0 && theme.constructor === Object);\n        };\n        //isTheme will check if the theme is provided by user and will update the theme only if its provided by user\n        //Not checking if the theme exist or not will always result in if statement getting executed as props.theme !== state.theme if theme is not provided\n        if (useDark !== state.useDark ||\n            (isTheme(props.theme) && props.theme !== state.theme)) {\n            const defaultColors = useDark ? darkColors : colors;\n            return {\n                theme: deepmerge(state.theme, deepmerge({\n                    colors: defaultColors,\n                }, props.theme)),\n                useDark,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (<ThemeContext.Provider value={{\n                theme: this.state.theme,\n                updateTheme: this.updateTheme,\n                replaceTheme: this.replaceTheme,\n            }}>\n        {this.props.children}\n      </ThemeContext.Provider>);\n    }\n}\nThemeProvider.defaultProps = {\n    theme: {},\n    useDark: false,\n};\nexport const ThemeConsumer = ThemeContext.Consumer;\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AAAsC;AAAA;AAAA;AAAA;AAC/B,IAAMA,YAAY,GAAGC,cAAK,CAACC,aAAa,CAAC;EAC5CC,KAAK,EAAE;IACHC,MAAM,EAANA;EACJ;AACJ,CAAC,CAAC;AAAC;AAAA,IACkBC,aAAa;EAAA;EAAA;EAC9B,uBAAYC,KAAK,EAAE;IAAA;IAAA;IACf,0BAAMA,KAAK;IACX,MAAKC,WAAW,GAAG,UAACC,OAAO,EAAK;MAC5B,MAAKC,QAAQ,CAAC;QAAA,IAAGN,KAAK,QAALA,KAAK;QAAA,OAAQ;UAC1BA,KAAK,EAAE,IAAAO,kBAAS,EAACP,KAAK,EAAEK,OAAO;QACnC,CAAC;MAAA,CAAC,CAAC;IACP,CAAC;IACD,MAAKG,YAAY,GAAG,UAACR,KAAK,EAAK;MAC3B,MAAKM,QAAQ,CAAC;QAAA,OAAO;UACjBN,KAAK,EAAE,IAAAO,kBAAS,EAAC,MAAKE,YAAY,EAAET,KAAK;QAC7C,CAAC;MAAA,CAAC,CAAC;IACP,CAAC;IACD,MAAKU,QAAQ,GAAG;MAAA,OAAM,MAAKC,KAAK,CAACX,KAAK;IAAA;IACtC,IAAMY,aAAa,GAAGT,KAAK,CAACU,OAAO,GAAGC,mBAAU,GAAGb,eAAM;IACzD,MAAKQ,YAAY,GAAG,IAAAF,kBAAS,EAAC;MAC1BN,MAAM,EAAEW;IACZ,CAAC,EAAET,KAAK,CAACH,KAAK,CAAC;IACf,MAAKW,KAAK,GAAG;MACTX,KAAK,EAAE,MAAKS,YAAY;MACxBI,OAAO,EAAEE,OAAO,CAACZ,KAAK,CAACU,OAAO;IAClC,CAAC;IAAC;EACN;EAAC;IAAA;IAAA,OAoBD,kBAAS;MACL,OAAQ,qBAAC,YAAY,CAAC,QAAQ;QAAC,KAAK,EAAE;UAC9Bb,KAAK,EAAE,IAAI,CAACW,KAAK,CAACX,KAAK;UACvBI,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BI,YAAY,EAAE,IAAI,CAACA;QACvB,CAAE;QAAA,UACL,IAAI,CAACL,KAAK,CAACa;MAAQ,EACE;IAC1B;EAAC;IAAA;IAAA,OA3BD,kCAAgCb,KAAK,EAAEQ,KAAK,EAAE;MAC1C,IAAQE,OAAO,GAAKV,KAAK,CAAjBU,OAAO;MACf,IAAMI,OAAO,GAAG,SAAVA,OAAO,CAAIjB,KAAK,EAAK;QACvB,OAAO,EAAEkB,MAAM,CAACC,IAAI,CAACnB,KAAK,CAAC,CAACoB,MAAM,KAAK,CAAC,IAAIpB,KAAK,CAACqB,WAAW,KAAKH,MAAM,CAAC;MAC7E,CAAC;MAGD,IAAIL,OAAO,KAAKF,KAAK,CAACE,OAAO,IACxBI,OAAO,CAACd,KAAK,CAACH,KAAK,CAAC,IAAIG,KAAK,CAACH,KAAK,KAAKW,KAAK,CAACX,KAAM,EAAE;QACvD,IAAMY,aAAa,GAAGC,OAAO,GAAGC,mBAAU,GAAGb,eAAM;QACnD,OAAO;UACHD,KAAK,EAAE,IAAAO,kBAAS,EAACI,KAAK,CAACX,KAAK,EAAE,IAAAO,kBAAS,EAAC;YACpCN,MAAM,EAAEW;UACZ,CAAC,EAAET,KAAK,CAACH,KAAK,CAAC,CAAC;UAChBa,OAAO,EAAPA;QACJ,CAAC;MACL;MACA,OAAO,IAAI;IACf;EAAC;EAAA;AAAA,EAzCsCf,cAAK,CAACwB,SAAS;AAAA;AAoD1DpB,aAAa,CAACqB,YAAY,GAAG;EACzBvB,KAAK,EAAE,CAAC,CAAC;EACTa,OAAO,EAAE;AACb,CAAC;AACM,IAAMW,aAAa,GAAG3B,YAAY,CAAC4B,QAAQ;AAAC"},"metadata":{},"sourceType":"script"}