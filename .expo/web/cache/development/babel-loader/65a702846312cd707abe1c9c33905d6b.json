{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport Validator from 'email-validator';\nimport { firebase, db } from \"../../firebase\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignupForm = function SignupForm(_ref) {\n  var navigation = _ref.navigation;\n  var SignupFormSchema = yup.object().shape({\n    email: yup.string().email().required('An email is required'),\n    username: yup.string().required().min(4, 'An email is required'),\n    password: yup.string().min(6, 'Your password must have 6 characters')\n  });\n  var getRandomProfilePicture = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var response = yield fetch('https://randomuser.me/api');\n      var data = yield response.json();\n      return data.results[0].picture.large;\n    });\n    return function getRandomProfilePicture() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onSignup = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password, username) {\n      try {\n        var authUser = yield firebase.auth().createUserWithEmailAndPassword(email, password);\n        console.log('Firebase User Created Successful', email, password);\n        db.collection('users').doc(authUser.user.email).set({\n          owner_uid: authUser.user.uid,\n          username: username,\n          email: authUser.user.email,\n          profile_picture: yield getRandomProfilePicture()\n        });\n      } catch (error) {\n        Alert.alert(error.message);\n      }\n    });\n    return function onSignup(_x, _x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.wrapper,\n    children: _jsx(Formik, {\n      initialValues: {\n        email: '',\n        username: '',\n        password: ''\n      },\n      onSubmit: function onSubmit(values) {\n        onSignup(values.email, values.password, values.username);\n      },\n      validationSchema: SignupFormSchema,\n      validateOnMount: true,\n      children: function children(_ref4) {\n        var handleBlur = _ref4.handleBlur,\n          handleChange = _ref4.handleChange,\n          handleSubmit = _ref4.handleSubmit,\n          values = _ref4.values,\n          errors = _ref4.errors,\n          isValid = _ref4.isValid,\n          Alert = _ref4.Alert;\n        return _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: [styles.inputField, {\n              borderColor: values.email.length < 1 || Validator.validate(values.email) ? '#ccc' : 'red'\n            }],\n            children: _jsx(TextInput, {\n              placeholder: \"Email\",\n              autoCapitalize: \"none\",\n              keyboardType: \"email-address\",\n              textContentType: \"emailAddress\",\n              autoFocus: true,\n              onChangeText: handleChange('email'),\n              onBlur: handleBlur('email'),\n              value: values.email\n            })\n          }), _jsx(View, {\n            style: [styles.inputField, {\n              borderColor: 1 > values.username.length || values.username.length >= 6 ? '#ccc' : 'red'\n            }],\n            children: _jsx(TextInput, {\n              placeholder: \"Username\",\n              autoCapitalize: \"none\",\n              textContentType: \"username\",\n              autoFocus: true,\n              onChangeText: handleChange('username'),\n              onBlur: handleBlur('username'),\n              value: values.username\n            })\n          }), _jsx(View, {\n            style: [styles.inputField, {\n              borderColor: 1 > values.password.length || values.password.length >= 6 ? '#ccc' : 'red'\n            }],\n            children: _jsx(TextInput, {\n              placeholder: \"Password\",\n              autoCapitalize: \"none\",\n              textContentType: \"password\",\n              autoCorrect: false,\n              secureTextEntry: true,\n              onChangeText: handleChange('password'),\n              onBlur: handleBlur('password'),\n              value: values.password\n            })\n          }), _jsx(Pressable, {\n            style: styles.button(isValid),\n            titleSize: 20,\n            onPress: handleSubmit,\n            disabled: !isValid,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Sign up\"\n            })\n          }), _jsxs(View, {\n            style: styles.signupContainer,\n            children: [_jsx(Text, {\n              children: \"Don't have an account?\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return navigation.push('LoginScreen');\n              },\n              children: _jsx(Text, {\n                style: {\n                  Color: '#6BB0F5'\n                },\n                children: \"      Log in\"\n              })\n            })]\n          })]\n        });\n      }\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    marginTop: 80\n  },\n  inputField: {\n    borderRadius: 4,\n    padding: 12,\n    marginBottom: 10,\n    borderWidth: 1\n  },\n  button: function button(isValid) {\n    return {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: isValid ? '#0096F6' : '#9ACAF7',\n      maxHeight: 42,\n      borderRadius: 4\n    };\n  },\n  buttonText: {\n    fontSize: 20,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  signupContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'center',\n    marginTop: 50\n  }\n});\nexport default SignupForm;","map":{"version":3,"names":["React","yup","Formik","Validator","firebase","db","SignupForm","navigation","SignupFormSchema","object","shape","email","string","required","username","min","password","getRandomProfilePicture","response","fetch","data","json","results","picture","large","onSignup","authUser","auth","createUserWithEmailAndPassword","console","log","collection","doc","user","set","owner_uid","uid","profile_picture","error","Alert","alert","message","styles","wrapper","values","handleBlur","handleChange","handleSubmit","errors","isValid","inputField","borderColor","length","validate","button","buttonText","signupContainer","push","Color","StyleSheet","create","marginTop","borderRadius","padding","marginBottom","borderWidth","alignItems","justifyContent","backgroundColor","maxHeight","fontSize","color","fontWeight","flexDirection","width"],"sources":["E:/Instagram-Clone/components/SignupForm/SignupForm.js"],"sourcesContent":["import {Text, View, TextInput, StyleSheet, Pressable, TouchableOpacity } from 'react-native'\r\nimport React from 'react'\r\nimport * as yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport Validator from 'email-validator';\r\nimport {firebase,db} from '../../firebase'\r\nimport { Alert } from 'react-native';\r\n\r\nconst SignupForm = ({navigation}) => {\r\n\r\n    const SignupFormSchema = yup.object().shape({\r\n        email: yup.string().email().required('An email is required'),\r\n        username: yup.string().required().min(4, 'An email is required'),\r\n        password: yup.string().min(6, 'Your password must have 6 characters'),\r\n    });\r\n\r\n    const getRandomProfilePicture = async() => {\r\n        const response = await fetch('https://randomuser.me/api')\r\n        const data = await response.json()\r\n        return data.results[0].picture.large\r\n    }\r\n\r\n    const onSignup = async(email, password, username) => {\r\n        try {\r\n            const authUser = await firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            console.log('Firebase User Created Successful', email, password)\r\n\r\n            db.collection('users').doc(authUser.user.email).set({\r\n                owner_uid: authUser.user.uid,\r\n                username: username,\r\n                email: authUser.user.email,\r\n                profile_picture: await getRandomProfilePicture(),\r\n            })\r\n        } catch (error) {\r\n            Alert.alert(error.message)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <View style={styles.wrapper}>\r\n    <Formik\r\n        initialValues={{email: '', username: '', password: ''}}\r\n        onSubmit={values =>{\r\n            onSignup(values.email, values.password, values.username)\r\n        }}\r\n        validationSchema={SignupFormSchema}\r\n        validateOnMount={true}\r\n    >\r\n     {({handleBlur, handleChange, handleSubmit, values, errors, isValid, Alert})=>\r\n        <>\r\n    <View style={[styles.inputField,\r\n        {\r\n          borderColor:\r\n          values.email.length < 1 || Validator.validate(values.email) ? '#ccc' : 'red'\r\n        },\r\n    ]}>\r\n      <TextInput placeholder='Email'\r\n                autoCapitalize='none'\r\n                keyboardType='email-address'\r\n                textContentType='emailAddress'\r\n                autoFocus={true}\r\n                onChangeText={handleChange('email')}\r\n                onBlur={handleBlur('email')}\r\n                value={values.email}\r\n      />\r\n      </View>\r\n      <View style={[styles.inputField,\r\n        {\r\n          borderColor:\r\n          1 > values.username.length || values.username.length >=6 ? '#ccc' : 'red'\r\n        },\r\n    ]}>\r\n      <TextInput placeholder='Username'\r\n                autoCapitalize='none'\r\n                textContentType='username'\r\n                autoFocus={true}\r\n                onChangeText={handleChange('username')}\r\n                onBlur={handleBlur('username')}\r\n                value={values.username}\r\n      />\r\n      </View>\r\n      <View style={[styles.inputField,\r\n        {\r\n          borderColor:\r\n          1 > values.password.length || values.password.length >=6 ? '#ccc' : 'red'\r\n        },\r\n    ]}>\r\n      <TextInput placeholder='Password'\r\n                autoCapitalize='none'\r\n                textContentType='password'\r\n                autoCorrect={false}\r\n                secureTextEntry={true}\r\n                onChangeText={handleChange('password')}\r\n                onBlur={handleBlur('password')}\r\n                value={values.password}\r\n      />\r\n      </View>\r\n      <Pressable style={styles.button(isValid)} titleSize={20} onPress={handleSubmit} disabled={!isValid}>\r\n        <Text style={styles.buttonText}>Sign up</Text>\r\n      </Pressable>\r\n      <View style={styles.signupContainer}>\r\n        <Text>Don't have an account?</Text>\r\n        <TouchableOpacity onPress={() => navigation.push('LoginScreen')}>\r\n            <Text style={{Color: '#6BB0F5'}}>      Log in</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      </>\r\n     }\r\n      </Formik>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        marginTop: 80,\r\n    },\r\n    inputField: {\r\n        borderRadius: 4,\r\n        padding: 12,\r\n        marginBottom: 10,\r\n        borderWidth: 1,\r\n    },\r\n    button: isValid =>({\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: isValid ? '#0096F6' : '#9ACAF7',\r\n        maxHeight: 42,\r\n        borderRadius: 4,\r\n    }),\r\n    buttonText: {\r\n        fontSize: 20,\r\n        color: '#fff',\r\n        fontWeight: '600',\r\n    },\r\n    signupContainer: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        marginTop: 50,\r\n    }\r\n});\r\n\r\nexport default SignupForm"],"mappings":";;;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAAQC,QAAQ,EAACC,EAAE;AAAuB;AAAA;AAAA;AAAA;AAG1C,IAAMC,UAAU,GAAG,SAAbA,UAAU,OAAqB;EAAA,IAAhBC,UAAU,QAAVA,UAAU;EAE3B,IAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAM,EAAE,CAACC,KAAK,CAAC;IACxCC,KAAK,EAAEV,GAAG,CAACW,MAAM,EAAE,CAACD,KAAK,EAAE,CAACE,QAAQ,CAAC,sBAAsB,CAAC;IAC5DC,QAAQ,EAAEb,GAAG,CAACW,MAAM,EAAE,CAACC,QAAQ,EAAE,CAACE,GAAG,CAAC,CAAC,EAAE,sBAAsB,CAAC;IAChEC,QAAQ,EAAEf,GAAG,CAACW,MAAM,EAAE,CAACG,GAAG,CAAC,CAAC,EAAE,sCAAsC;EACxE,CAAC,CAAC;EAEF,IAAME,uBAAuB;IAAA,8BAAG,aAAW;MACvC,IAAMC,QAAQ,SAASC,KAAK,CAAC,2BAA2B,CAAC;MACzD,IAAMC,IAAI,SAASF,QAAQ,CAACG,IAAI,EAAE;MAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK;IACxC,CAAC;IAAA,gBAJKP,uBAAuB;MAAA;IAAA;EAAA,GAI5B;EAED,IAAMQ,QAAQ;IAAA,8BAAG,WAAMd,KAAK,EAAEK,QAAQ,EAAEF,QAAQ,EAAK;MACjD,IAAI;QACA,IAAMY,QAAQ,SAAStB,QAAQ,CAACuB,IAAI,EAAE,CAACC,8BAA8B,CAACjB,KAAK,EAAEK,QAAQ,CAAC;QACtFa,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEnB,KAAK,EAAEK,QAAQ,CAAC;QAEhEX,EAAE,CAAC0B,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACN,QAAQ,CAACO,IAAI,CAACtB,KAAK,CAAC,CAACuB,GAAG,CAAC;UAChDC,SAAS,EAAET,QAAQ,CAACO,IAAI,CAACG,GAAG;UAC5BtB,QAAQ,EAAEA,QAAQ;UAClBH,KAAK,EAAEe,QAAQ,CAACO,IAAI,CAACtB,KAAK;UAC1B0B,eAAe,QAAQpB,uBAAuB;QAClD,CAAC,CAAC;MACN,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACZC,KAAK,CAACC,KAAK,CAACF,KAAK,CAACG,OAAO,CAAC;MAC9B;IACJ,CAAC;IAAA,gBAdKhB,QAAQ;MAAA;IAAA;EAAA,GAcb;EAEH,OACE,KAAC,IAAI;IAAC,KAAK,EAAEiB,MAAM,CAACC,OAAQ;IAAA,UAC5B,KAAC,MAAM;MACH,aAAa,EAAE;QAAChC,KAAK,EAAE,EAAE;QAAEG,QAAQ,EAAE,EAAE;QAAEE,QAAQ,EAAE;MAAE,CAAE;MACvD,QAAQ,EAAE,kBAAA4B,MAAM,EAAG;QACfnB,QAAQ,CAACmB,MAAM,CAACjC,KAAK,EAAEiC,MAAM,CAAC5B,QAAQ,EAAE4B,MAAM,CAAC9B,QAAQ,CAAC;MAC5D,CAAE;MACF,gBAAgB,EAAEN,gBAAiB;MACnC,eAAe,EAAE,IAAK;MAAA,UAExB;QAAA,IAAEqC,UAAU,SAAVA,UAAU;UAAEC,YAAY,SAAZA,YAAY;UAAEC,YAAY,SAAZA,YAAY;UAAEH,MAAM,SAANA,MAAM;UAAEI,MAAM,SAANA,MAAM;UAAEC,OAAO,SAAPA,OAAO;UAAEV,KAAK,SAALA,KAAK;QAAA,OACtE;UAAA,WACJ,KAAC,IAAI;YAAC,KAAK,EAAE,CAACG,MAAM,CAACQ,UAAU,EAC3B;cACEC,WAAW,EACXP,MAAM,CAACjC,KAAK,CAACyC,MAAM,GAAG,CAAC,IAAIjD,SAAS,CAACkD,QAAQ,CAACT,MAAM,CAACjC,KAAK,CAAC,GAAG,MAAM,GAAG;YACzE,CAAC,CACH;YAAA,UACA,KAAC,SAAS;cAAC,WAAW,EAAC,OAAO;cACpB,cAAc,EAAC,MAAM;cACrB,YAAY,EAAC,eAAe;cAC5B,eAAe,EAAC,cAAc;cAC9B,SAAS,EAAE,IAAK;cAChB,YAAY,EAAEmC,YAAY,CAAC,OAAO,CAAE;cACpC,MAAM,EAAED,UAAU,CAAC,OAAO,CAAE;cAC5B,KAAK,EAAED,MAAM,CAACjC;YAAM;UAC5B,EACK,EACP,KAAC,IAAI;YAAC,KAAK,EAAE,CAAC+B,MAAM,CAACQ,UAAU,EAC7B;cACEC,WAAW,EACX,CAAC,GAAGP,MAAM,CAAC9B,QAAQ,CAACsC,MAAM,IAAIR,MAAM,CAAC9B,QAAQ,CAACsC,MAAM,IAAG,CAAC,GAAG,MAAM,GAAG;YACtE,CAAC,CACH;YAAA,UACA,KAAC,SAAS;cAAC,WAAW,EAAC,UAAU;cACvB,cAAc,EAAC,MAAM;cACrB,eAAe,EAAC,UAAU;cAC1B,SAAS,EAAE,IAAK;cAChB,YAAY,EAAEN,YAAY,CAAC,UAAU,CAAE;cACvC,MAAM,EAAED,UAAU,CAAC,UAAU,CAAE;cAC/B,KAAK,EAAED,MAAM,CAAC9B;YAAS;UAC/B,EACK,EACP,KAAC,IAAI;YAAC,KAAK,EAAE,CAAC4B,MAAM,CAACQ,UAAU,EAC7B;cACEC,WAAW,EACX,CAAC,GAAGP,MAAM,CAAC5B,QAAQ,CAACoC,MAAM,IAAIR,MAAM,CAAC5B,QAAQ,CAACoC,MAAM,IAAG,CAAC,GAAG,MAAM,GAAG;YACtE,CAAC,CACH;YAAA,UACA,KAAC,SAAS;cAAC,WAAW,EAAC,UAAU;cACvB,cAAc,EAAC,MAAM;cACrB,eAAe,EAAC,UAAU;cAC1B,WAAW,EAAE,KAAM;cACnB,eAAe,EAAE,IAAK;cACtB,YAAY,EAAEN,YAAY,CAAC,UAAU,CAAE;cACvC,MAAM,EAAED,UAAU,CAAC,UAAU,CAAE;cAC/B,KAAK,EAAED,MAAM,CAAC5B;YAAS;UAC/B,EACK,EACP,KAAC,SAAS;YAAC,KAAK,EAAE0B,MAAM,CAACY,MAAM,CAACL,OAAO,CAAE;YAAC,SAAS,EAAE,EAAG;YAAC,OAAO,EAAEF,YAAa;YAAC,QAAQ,EAAE,CAACE,OAAQ;YAAA,UACjG,KAAC,IAAI;cAAC,KAAK,EAAEP,MAAM,CAACa,UAAW;cAAA,UAAC;YAAO;UAAO,EACpC,EACZ,MAAC,IAAI;YAAC,KAAK,EAAEb,MAAM,CAACc,eAAgB;YAAA,WAClC,KAAC,IAAI;cAAA,UAAC;YAAsB,EAAO,EACnC,KAAC,gBAAgB;cAAC,OAAO,EAAE;gBAAA,OAAMjD,UAAU,CAACkD,IAAI,CAAC,aAAa,CAAC;cAAA,CAAC;cAAA,UAC5D,KAAC,IAAI;gBAAC,KAAK,EAAE;kBAACC,KAAK,EAAE;gBAAS,CAAE;gBAAA,UAAC;cAAY;YAAO,EACrC;UAAA,EACd;QAAA,EACJ;MAAA;IAAA;EAEM,EACJ;AAEX,CAAC;AAED,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAM,CAAC;EAC7BjB,OAAO,EAAE;IACLkB,SAAS,EAAE;EACf,CAAC;EACDX,UAAU,EAAE;IACRY,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACjB,CAAC;EACDX,MAAM,EAAE,gBAAAL,OAAO;IAAA,OAAI;MACfiB,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,eAAe,EAAEnB,OAAO,GAAG,SAAS,GAAG,SAAS;MAChDoB,SAAS,EAAE,EAAE;MACbP,YAAY,EAAE;IAClB,CAAC;EAAA,CAAC;EACFP,UAAU,EAAE;IACRe,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;EAChB,CAAC;EACDhB,eAAe,EAAE;IACbiB,aAAa,EAAE,KAAK;IACpBC,KAAK,EAAE,MAAM;IACbP,cAAc,EAAE,QAAQ;IACxBN,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAEF,eAAevD,UAAU"},"metadata":{},"sourceType":"module"}