{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderContainer;\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _HeaderStyleInterpolators = require(\"../../TransitionConfigs/HeaderStyleInterpolators\");\nvar _Header = _interopRequireDefault(require(\"./Header\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction HeaderContainer(_ref) {\n  var mode = _ref.mode,\n    scenes = _ref.scenes,\n    layout = _ref.layout,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    onContentHeightChange = _ref.onContentHeightChange,\n    style = _ref.style;\n  var focusedRoute = getFocusedRoute();\n  var parentHeaderBack = React.useContext(_elements.HeaderBackContext);\n  return React.createElement(_reactNative.Animated.View, {\n    pointerEvents: \"box-none\",\n    style: style\n  }, scenes.slice(-3).map(function (scene, i, self) {\n    var _self, _self2;\n    if (mode === 'screen' && i !== self.length - 1 || !scene) {\n      return null;\n    }\n    var _scene$descriptor$opt = scene.descriptor.options,\n      header = _scene$descriptor$opt.header,\n      headerMode = _scene$descriptor$opt.headerMode,\n      _scene$descriptor$opt2 = _scene$descriptor$opt.headerShown,\n      headerShown = _scene$descriptor$opt2 === void 0 ? true : _scene$descriptor$opt2,\n      headerTransparent = _scene$descriptor$opt.headerTransparent,\n      headerStyleInterpolator = _scene$descriptor$opt.headerStyleInterpolator;\n    if (headerMode !== mode || !headerShown) {\n      return null;\n    }\n    var isFocused = focusedRoute.key === scene.descriptor.route.key;\n    var previousScene = getPreviousScene({\n      route: scene.descriptor.route\n    });\n    var headerBack = parentHeaderBack;\n    if (previousScene) {\n      var _previousScene$descri = previousScene.descriptor,\n        options = _previousScene$descri.options,\n        route = _previousScene$descri.route;\n      headerBack = previousScene ? {\n        title: (0, _elements.getHeaderTitle)(options, route.name)\n      } : parentHeaderBack;\n    }\n    var previousDescriptor = (_self = self[i - 1]) === null || _self === void 0 ? void 0 : _self.descriptor;\n    var nextDescriptor = (_self2 = self[i + 1]) === null || _self2 === void 0 ? void 0 : _self2.descriptor;\n    var _ref2 = (previousDescriptor === null || previousDescriptor === void 0 ? void 0 : previousDescriptor.options) || {},\n      _ref2$headerShown = _ref2.headerShown,\n      previousHeaderShown = _ref2$headerShown === void 0 ? true : _ref2$headerShown,\n      previousHeaderMode = _ref2.headerMode;\n    var nextHeaderlessScene = self.slice(i + 1).find(function (scene) {\n      var _ref3 = (scene === null || scene === void 0 ? void 0 : scene.descriptor.options) || {},\n        _ref3$headerShown = _ref3.headerShown,\n        currentHeaderShown = _ref3$headerShown === void 0 ? true : _ref3$headerShown,\n        currentHeaderMode = _ref3.headerMode;\n      return currentHeaderShown === false || currentHeaderMode === 'screen';\n    });\n    var _ref4 = (nextHeaderlessScene === null || nextHeaderlessScene === void 0 ? void 0 : nextHeaderlessScene.descriptor.options) || {},\n      nextHeaderlessGestureDirection = _ref4.gestureDirection;\n    var isHeaderStatic = (previousHeaderShown === false || previousHeaderMode === 'screen') && !nextDescriptor || nextHeaderlessScene;\n    var props = {\n      layout: layout,\n      back: headerBack,\n      progress: scene.progress,\n      options: scene.descriptor.options,\n      route: scene.descriptor.route,\n      navigation: scene.descriptor.navigation,\n      styleInterpolator: mode === 'float' ? isHeaderStatic ? nextHeaderlessGestureDirection === 'vertical' || nextHeaderlessGestureDirection === 'vertical-inverted' ? _HeaderStyleInterpolators.forSlideUp : nextHeaderlessGestureDirection === 'horizontal-inverted' ? _HeaderStyleInterpolators.forSlideRight : _HeaderStyleInterpolators.forSlideLeft : headerStyleInterpolator : _HeaderStyleInterpolators.forNoAnimation\n    };\n    return React.createElement(_native.NavigationContext.Provider, {\n      key: scene.descriptor.route.key,\n      value: scene.descriptor.navigation\n    }, React.createElement(_native.NavigationRouteContext.Provider, {\n      value: scene.descriptor.route\n    }, React.createElement(_reactNative.View, {\n      onLayout: onContentHeightChange ? function (e) {\n        var height = e.nativeEvent.layout.height;\n        onContentHeightChange({\n          route: scene.descriptor.route,\n          height: height\n        });\n      } : undefined,\n      pointerEvents: isFocused ? 'box-none' : 'none',\n      accessibilityElementsHidden: !isFocused,\n      importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n      style: mode === 'float' && !isFocused || headerTransparent ? styles.header : null\n    }, header !== undefined ? header(props) : React.createElement(_Header.default, props))));\n  }));\n}\nvar styles = _reactNative.StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["HeaderContainer.tsx"],"names":["HeaderContainer","mode","scenes","layout","getPreviousScene","getFocusedRoute","onContentHeightChange","style","focusedRoute","parentHeaderBack","React","useContext","HeaderBackContext","slice","map","scene","i","self","length","header","headerMode","headerShown","headerTransparent","headerStyleInterpolator","descriptor","options","isFocused","key","route","previousScene","headerBack","title","getHeaderTitle","name","previousDescriptor","nextDescriptor","previousHeaderShown","previousHeaderMode","nextHeaderlessScene","find","currentHeaderShown","currentHeaderMode","gestureDirection","nextHeaderlessGestureDirection","isHeaderStatic","props","back","progress","navigation","styleInterpolator","forSlideUp","forSlideRight","forSlideLeft","forNoAnimation","e","height","nativeEvent","undefined","styles","StyleSheet","create","position","top","left","right"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { getHeaderTitle, HeaderBackContext } from '@react-navigation/elements';\nimport { NavigationContext, NavigationRouteContext } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { forNoAnimation, forSlideLeft, forSlideRight, forSlideUp } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport Header from './Header';\nexport default function HeaderContainer(_ref) {\n  let {\n    mode,\n    scenes,\n    layout,\n    getPreviousScene,\n    getFocusedRoute,\n    onContentHeightChange,\n    style\n  } = _ref;\n  const focusedRoute = getFocusedRoute();\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: style\n  }, scenes.slice(-3).map((scene, i, self) => {\n    var _self, _self2;\n    if (mode === 'screen' && i !== self.length - 1 || !scene) {\n      return null;\n    }\n    const {\n      header,\n      headerMode,\n      headerShown = true,\n      headerTransparent,\n      headerStyleInterpolator\n    } = scene.descriptor.options;\n    if (headerMode !== mode || !headerShown) {\n      return null;\n    }\n    const isFocused = focusedRoute.key === scene.descriptor.route.key;\n    const previousScene = getPreviousScene({\n      route: scene.descriptor.route\n    });\n    let headerBack = parentHeaderBack;\n    if (previousScene) {\n      const {\n        options,\n        route\n      } = previousScene.descriptor;\n      headerBack = previousScene ? {\n        title: getHeaderTitle(options, route.name)\n      } : parentHeaderBack;\n    }\n\n    // If the screen is next to a headerless screen, we need to make the header appear static\n    // This makes the header look like it's moving with the screen\n    const previousDescriptor = (_self = self[i - 1]) === null || _self === void 0 ? void 0 : _self.descriptor;\n    const nextDescriptor = (_self2 = self[i + 1]) === null || _self2 === void 0 ? void 0 : _self2.descriptor;\n    const {\n      headerShown: previousHeaderShown = true,\n      headerMode: previousHeaderMode\n    } = (previousDescriptor === null || previousDescriptor === void 0 ? void 0 : previousDescriptor.options) || {};\n\n    // If any of the next screens don't have a header or header is part of the screen\n    // Then we need to move this header offscreen so that it doesn't cover it\n    const nextHeaderlessScene = self.slice(i + 1).find(scene => {\n      const {\n        headerShown: currentHeaderShown = true,\n        headerMode: currentHeaderMode\n      } = (scene === null || scene === void 0 ? void 0 : scene.descriptor.options) || {};\n      return currentHeaderShown === false || currentHeaderMode === 'screen';\n    });\n    const {\n      gestureDirection: nextHeaderlessGestureDirection\n    } = (nextHeaderlessScene === null || nextHeaderlessScene === void 0 ? void 0 : nextHeaderlessScene.descriptor.options) || {};\n    const isHeaderStatic = (previousHeaderShown === false || previousHeaderMode === 'screen') &&\n    // We still need to animate when coming back from next scene\n    // A hacky way to check this is if the next scene exists\n    !nextDescriptor || nextHeaderlessScene;\n    const props = {\n      layout,\n      back: headerBack,\n      progress: scene.progress,\n      options: scene.descriptor.options,\n      route: scene.descriptor.route,\n      navigation: scene.descriptor.navigation,\n      styleInterpolator: mode === 'float' ? isHeaderStatic ? nextHeaderlessGestureDirection === 'vertical' || nextHeaderlessGestureDirection === 'vertical-inverted' ? forSlideUp : nextHeaderlessGestureDirection === 'horizontal-inverted' ? forSlideRight : forSlideLeft : headerStyleInterpolator : forNoAnimation\n    };\n    return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n      key: scene.descriptor.route.key,\n      value: scene.descriptor.navigation\n    }, /*#__PURE__*/React.createElement(NavigationRouteContext.Provider, {\n      value: scene.descriptor.route\n    }, /*#__PURE__*/React.createElement(View, {\n      onLayout: onContentHeightChange ? e => {\n        const {\n          height\n        } = e.nativeEvent.layout;\n        onContentHeightChange({\n          route: scene.descriptor.route,\n          height\n        });\n      } : undefined,\n      pointerEvents: isFocused ? 'box-none' : 'none',\n      accessibilityElementsHidden: !isFocused,\n      importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n      style:\n      // Avoid positioning the focused header absolutely\n      // Otherwise accessibility tools don't seem to be able to find it\n      mode === 'float' && !isFocused || headerTransparent ? styles.header : null\n    }, header !== undefined ? header(props) : /*#__PURE__*/React.createElement(Header, props))));\n  }));\n}\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});\n//# sourceMappingURL=HeaderContainer.js.map"]},"metadata":{},"sourceType":"script"}