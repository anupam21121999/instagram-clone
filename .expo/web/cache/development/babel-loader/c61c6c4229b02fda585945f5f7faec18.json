{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useLinkBuilder;\nvar _core = require(\"@react-navigation/core\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _LinkingContext = _interopRequireDefault(require(\"./LinkingContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar getRootStateForNavigate = function getRootStateForNavigate(navigation, state) {\n  var parent = navigation.getParent();\n  if (parent) {\n    var parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [Object.assign({}, parentState.routes[parentState.index], {\n        state: state\n      })]\n    });\n  }\n  return state;\n};\nfunction useLinkBuilder() {\n  var navigation = React.useContext(_core.NavigationHelpersContext);\n  var linking = React.useContext(_LinkingContext.default);\n  var buildLink = React.useCallback(function (name, params) {\n    var options = linking.options;\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n    var state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    }) : {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    };\n    var path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : (0, _core.getPathFromState)(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}","map":{"version":3,"sources":["useLinkBuilder.tsx"],"names":["getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","useLinkBuilder","React","useContext","NavigationHelpersContext","linking","LinkingContext","buildLink","useCallback","name","params","options","enabled","undefined","path","getPathFromState","config"],"mappings":";;;;;AAAA;AAOA;AAEA;AAA6C;AAAA;AAW7C,IAAMA,uBAAuB,GAAG,SAA1BA,uBAAuB,CAC3BC,UAA4B,EAC5BC,KAAmB,EACF;EACjB,IAAMC,MAAM,GAAGF,UAAU,CAACG,SAAS,EAAE;EAErC,IAAID,MAAM,EAAE;IACV,IAAME,WAAW,GAAGF,MAAM,CAACG,QAAQ,EAAE;IAErC,OAAON,uBAAuB,CAACG,MAAM,EAAE;MACrCI,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,mBAEDH,WAAW,CAACG,MAAM,CAACH,WAAW,CAACE,KAAK,CAAC;QACxCL,KAAK,EAAEA;MAAAA;IAGb,CAAC,CAAC;EACJ;EAEA,OAAOA,KAAK;AACd,CAAC;AAMc,SAASO,cAAc,GAAG;EACvC,IAAMR,UAAU,GAAGS,KAAK,CAACC,UAAU,CAACC,8BAAwB,CAAC;EAC7D,IAAMC,OAAO,GAAGH,KAAK,CAACC,UAAU,CAACG,uBAAc,CAAC;EAEhD,IAAMC,SAAS,GAAGL,KAAK,CAACM,WAAW,CACjC,UAACC,IAAY,EAAEC,MAAe,EAAK;IACjC,IAAQC,OAAAA,GAAYN,OAAO,CAAnBM,OAAAA;IAER,IAAI,CAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAEC,OAAO,MAAK,KAAK,EAAE;MAC9B,OAAOC,SAAS;IAClB;IAEA,IAAMnB,KAAK,GAAGD,UAAU,GACpBD,uBAAuB,CAACC,UAAU,EAAE;MAClCM,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;QAAES,IAAI,EAAJA,IAAI;QAAEC,MAAAA,EAAAA;MAAO,CAAC;IAC3B,CAAC,CAAC,GAGF;MACEX,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;QAAES,IAAI,EAAJA,IAAI;QAAEC,MAAAA,EAAAA;MAAO,CAAC;IAC3B,CAAC;IAEL,IAAMI,IAAI,GAAGH,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAEI,gBAAgB,GAClCJ,OAAO,CAACI,gBAAgB,CAACrB,KAAK,EAAEiB,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEK,MAAM,CAAC,GAChDD,IAAAA,sBAAgB,EAACrB,KAAK,EAAEiB,OAAO,KAAA,IAAA,IAAPA,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,OAAO,CAAEK,MAAM,CAAC;IAE5C,OAAOF,IAAI;EACb,CAAC,EACD,CAACT,OAAO,EAAEZ,UAAU,CAAC,CACtB;EAED,OAAOc,SAAS;AAClB","sourceRoot":"../../src","sourcesContent":["import { getPathFromState, NavigationHelpersContext } from '@react-navigation/core';\nimport * as React from 'react';\nimport LinkingContext from './LinkingContext';\nconst getRootStateForNavigate = (navigation, state) => {\n  const parent = navigation.getParent();\n  if (parent) {\n    const parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [{\n        ...parentState.routes[parentState.index],\n        state: state\n      }]\n    });\n  }\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n  const buildLink = React.useCallback((name, params) => {\n    const {\n      options\n    } = linking;\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n    const state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name,\n        params\n      }]\n    }) :\n    // If we couldn't find a navigation object in context, we're at root\n    // So we'll construct a basic state object to use\n    {\n      index: 0,\n      routes: [{\n        name,\n        params\n      }]\n    };\n    const path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : getPathFromState(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}\n//# sourceMappingURL=useLinkBuilder.js.map"]},"metadata":{},"sourceType":"script"}