{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Divider } from 'react-native-elements';\nimport validUrl from 'valid-url';\nimport { firebase, db } from \"../../firebase\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar placeholder_img = 'https://t3.ftcdn.net/jpg/02/48/42/64/360_F_248426448_NVKLywWqArG2ADUxDq6QprtIzsF82dMF.jpg';\nvar uploadPostSchema = yup.object().shape({\n  imageUrl: yup.string().url().required('A url is required'),\n  caption: yup.string().max(2200, 'Caption has reached the max limit.')\n});\nvar FormicPostUploader = function FormicPostUploader(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(placeholder_img),\n    _useState2 = _slicedToArray(_useState, 2),\n    thumbnailUrl = _useState2[0],\n    setThumbnailUrl = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentLoggedInUser = _useState4[0],\n    setCurrentLoggedInUser = _useState4[1];\n  var getUsername = function getUsername() {\n    var user = firebase.auth().currentUser;\n    var unsubscribe = db.collection('users').where('owner_uid', '==', user.uid).limit(1).onSnapshot(function (snapshot) {\n      return snapshot.docs.map(function (doc) {\n        setCurrentLoggedInUser({\n          username: doc.data().username,\n          profilePicture: doc.data().profile_picture\n        });\n      });\n    });\n    return unsubscribe;\n  };\n  useEffect(function () {\n    getUsername();\n  }, []);\n  var uploadPostToFirebase = function uploadPostToFirebase(imageUrl, caption) {\n    var unsubscribe = db.collection('users').doc(firebase.auth().currentUser.email).collection('posts').add({\n      imageUrl: imageUrl,\n      user: currentLoggedInUser.username,\n      profile_picture: currentLoggedInUser.profilePicture,\n      owner_uid: firebase.auth().currentUser.uid,\n      owner_email: firebase.auth().currentUser.email,\n      caption: caption,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      likes_by_users: [],\n      comments: []\n    }).then(function () {\n      return navigation.goBack();\n    });\n    return unsubscribe;\n  };\n  return _jsx(Formik, {\n    initialValues: {\n      caption: '',\n      imageUrl: ''\n    },\n    onSubmit: function onSubmit(values) {\n      uploadPostToFirebase(values.imageUrl, values.caption);\n    },\n    validationSchema: uploadPostSchema,\n    validateOnMount: true,\n    children: function children(_ref2) {\n      var handleBlur = _ref2.handleBlur,\n        handleChange = _ref2.handleChange,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values,\n        errors = _ref2.errors,\n        isValid = _ref2.isValid;\n      return _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          style: {\n            margin: 20,\n            justifyContent: 'space-between',\n            flexDirection: 'row'\n          },\n          children: [_jsx(Image, {\n            source: {\n              uri: validUrl.isUri(thumbnailUrl) ? thumbnailUrl : placeholder_img\n            },\n            style: {\n              height: 100,\n              width: 100\n            }\n          }), _jsx(View, {\n            style: {\n              flex: 1,\n              marginLeft: 10\n            },\n            children: _jsx(TextInput, {\n              style: {\n                fontSize: 20\n              },\n              placeholder: \"Write a caption\",\n              placeholderTextColor: \"grey\",\n              multiline: true,\n              onChangeText: handleChange('caption'),\n              onBlur: handleBlur('caption'),\n              value: values.caption\n            })\n          })]\n        }), _jsx(Divider, {\n          width: 1,\n          orientation: \"vertical\"\n        }), _jsx(TextInput, {\n          style: {\n            fontSize: 20\n          },\n          placeholder: \"Insert an image\",\n          onChange: function onChange(e) {\n            return setThumbnailUrl(e.nativeEvent.text);\n          },\n          placeholderTextColor: \"grey\",\n          onChangeText: handleChange('imageUrl'),\n          onBlur: handleBlur('imageUrl'),\n          value: values.imageUrl\n        }), errors.imageUrl && _jsx(Text, {\n          style: {\n            fontSize: 10,\n            color: 'red'\n          },\n          children: errors.imageUrl\n        }), _jsx(Button, {\n          onPress: handleSubmit,\n          title: \"Share\",\n          disabled: !isValid\n        })]\n      });\n    }\n  });\n};\nexport default FormicPostUploader;","map":{"version":3,"names":["React","useState","useEffect","yup","Formik","Divider","validUrl","firebase","db","placeholder_img","uploadPostSchema","object","shape","imageUrl","string","url","required","caption","max","FormicPostUploader","navigation","thumbnailUrl","setThumbnailUrl","currentLoggedInUser","setCurrentLoggedInUser","getUsername","user","auth","currentUser","unsubscribe","collection","where","uid","limit","onSnapshot","snapshot","docs","map","doc","username","data","profilePicture","profile_picture","uploadPostToFirebase","email","add","owner_uid","owner_email","createdAt","firestore","FieldValue","serverTimestamp","likes_by_users","comments","then","goBack","values","handleBlur","handleChange","handleSubmit","errors","isValid","margin","justifyContent","flexDirection","uri","isUri","height","width","flex","marginLeft","fontSize","e","nativeEvent","text","color"],"sources":["E:/Instagram-Clone/components/newPost/FormicPostUploader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport * as yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {Button, Image, View, Text } from 'react-native';\r\nimport { TextInput } from 'react-native';\r\nimport {  Divider } from 'react-native-elements';\r\nimport validUrl from 'valid-url'\r\nimport {firebase, db} from '../../firebase'\r\n\r\nconst placeholder_img = 'https://t3.ftcdn.net/jpg/02/48/42/64/360_F_248426448_NVKLywWqArG2ADUxDq6QprtIzsF82dMF.jpg'\r\n\r\nconst uploadPostSchema = yup.object().shape({\r\n    imageUrl: yup.string().url().required('A url is required'),\r\n    caption: yup.string().max(2200, 'Caption has reached the max limit.')\r\n});\r\n\r\nconst FormicPostUploader = ({navigation}) => {\r\n    const [thumbnailUrl, setThumbnailUrl] = useState(placeholder_img)\r\n    const [currentLoggedInUser, setCurrentLoggedInUser] = useState(null)\r\n\r\n    const getUsername = () => {\r\n      const user = firebase.auth().currentUser\r\n      const unsubscribe = db.collection('users').where('owner_uid', '==', user.uid).limit(1).onSnapshot(\r\n        snapshot => snapshot.docs.map(doc=> {\r\n          setCurrentLoggedInUser({\r\n            username: doc.data().username,\r\n            profilePicture: doc.data().profile_picture,\r\n          })\r\n        })\r\n      )\r\n      return unsubscribe\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getUsername()\r\n    },[])\r\n\r\n    const uploadPostToFirebase = (imageUrl, caption) =>{\r\n      const unsubscribe = db.collection('users').doc(firebase.auth().currentUser.email).collection('posts')\r\n      .add({\r\n        imageUrl: imageUrl,\r\n        user: currentLoggedInUser.username,\r\n        profile_picture: currentLoggedInUser.profilePicture,\r\n        owner_uid: firebase.auth().currentUser.uid,\r\n        owner_email: firebase.auth().currentUser.email,\r\n        caption: caption,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        likes_by_users: [],\r\n        comments: [],\r\n      })\r\n      .then(()=> navigation.goBack())\r\n      return unsubscribe\r\n    }\r\n\r\n  return (\r\n   <Formik initialValues={{caption: '', imageUrl: ''}}\r\n    onSubmit={(values) =>{\r\n      uploadPostToFirebase(values.imageUrl, values.caption)\r\n      }} \r\n    validationSchema={uploadPostSchema} \r\n    validateOnMount={true}>\r\n        {({handleBlur, handleChange, handleSubmit, values, errors, isValid})=>\r\n        <>\r\n            <View style={{margin: 20, justifyContent: 'space-between', flexDirection: 'row'}}>\r\n                <Image source={{uri: validUrl.isUri(thumbnailUrl) ? thumbnailUrl : placeholder_img}} style={{height: 100, width: 100}}/>\r\n            <View style={{flex: 1, marginLeft: 10}}>\r\n            <TextInput style={{fontSize: 20}} placeholder='Write a caption'\r\n             placeholderTextColor='grey'\r\n              multiline={true} \r\n              onChangeText={handleChange('caption')}\r\n                onBlur={handleBlur('caption')}\r\n                value={values.caption}\r\n              />\r\n              </View>\r\n            </View>\r\n            <Divider width={1} orientation='vertical'/>\r\n            <TextInput style={{fontSize: 20}} placeholder='Insert an image'\r\n            onChange={e => setThumbnailUrl(e.nativeEvent.text)}\r\n             placeholderTextColor='grey'\r\n             onChangeText={handleChange('imageUrl')}\r\n                onBlur={handleBlur('imageUrl')}\r\n                value={values.imageUrl}\r\n             />\r\n             {errors.imageUrl && (\r\n              <Text style={{fontSize: 10, color: 'red'}}>\r\n                {errors.imageUrl}\r\n              </Text>\r\n             )}\r\n             <Button onPress={handleSubmit} title='Share' disabled={!isValid}/>\r\n        </>\r\n        }\r\n   </Formik>\r\n  )\r\n}\r\n\r\nexport default FormicPostUploader"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,MAAM,QAAQ,QAAQ;AAAC;AAAA;AAAA;AAAA;AAAA;AAGhC,SAAUC,OAAO,QAAQ,uBAAuB;AAChD,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAAQC,QAAQ,EAAEC,EAAE;AAAuB;AAAA;AAAA;AAE3C,IAAMC,eAAe,GAAG,2FAA2F;AAEnH,IAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAM,EAAE,CAACC,KAAK,CAAC;EACxCC,QAAQ,EAAEV,GAAG,CAACW,MAAM,EAAE,CAACC,GAAG,EAAE,CAACC,QAAQ,CAAC,mBAAmB,CAAC;EAC1DC,OAAO,EAAEd,GAAG,CAACW,MAAM,EAAE,CAACI,GAAG,CAAC,IAAI,EAAE,oCAAoC;AACxE,CAAC,CAAC;AAEF,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,OAAqB;EAAA,IAAhBC,UAAU,QAAVA,UAAU;EACnC,gBAAwCnB,QAAQ,CAACQ,eAAe,CAAC;IAAA;IAA1DY,YAAY;IAAEC,eAAe;EACpC,iBAAsDrB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7DsB,mBAAmB;IAAEC,sBAAsB;EAElD,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;IACxB,IAAMC,IAAI,GAAGnB,QAAQ,CAACoB,IAAI,EAAE,CAACC,WAAW;IACxC,IAAMC,WAAW,GAAGrB,EAAE,CAACsB,UAAU,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAEL,IAAI,CAACM,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,UAAU,CAC/F,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,UAAAC,GAAG,EAAG;QAClCd,sBAAsB,CAAC;UACrBe,QAAQ,EAAED,GAAG,CAACE,IAAI,EAAE,CAACD,QAAQ;UAC7BE,cAAc,EAAEH,GAAG,CAACE,IAAI,EAAE,CAACE;QAC7B,CAAC,CAAC;MACJ,CAAC,CAAC;IAAA,EACH;IACD,OAAOb,WAAW;EACpB,CAAC;EAED3B,SAAS,CAAC,YAAI;IACVuB,WAAW,EAAE;EACjB,CAAC,EAAC,EAAE,CAAC;EAEL,IAAMkB,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAI9B,QAAQ,EAAEI,OAAO,EAAI;IACjD,IAAMY,WAAW,GAAGrB,EAAE,CAACsB,UAAU,CAAC,OAAO,CAAC,CAACQ,GAAG,CAAC/B,QAAQ,CAACoB,IAAI,EAAE,CAACC,WAAW,CAACgB,KAAK,CAAC,CAACd,UAAU,CAAC,OAAO,CAAC,CACpGe,GAAG,CAAC;MACHhC,QAAQ,EAAEA,QAAQ;MAClBa,IAAI,EAAEH,mBAAmB,CAACgB,QAAQ;MAClCG,eAAe,EAAEnB,mBAAmB,CAACkB,cAAc;MACnDK,SAAS,EAAEvC,QAAQ,CAACoB,IAAI,EAAE,CAACC,WAAW,CAACI,GAAG;MAC1Ce,WAAW,EAAExC,QAAQ,CAACoB,IAAI,EAAE,CAACC,WAAW,CAACgB,KAAK;MAC9C3B,OAAO,EAAEA,OAAO;MAChB+B,SAAS,EAAEzC,QAAQ,CAAC0C,SAAS,CAACC,UAAU,CAACC,eAAe,EAAE;MAC1DC,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE;IACZ,CAAC,CAAC,CACDC,IAAI,CAAC;MAAA,OAAKlC,UAAU,CAACmC,MAAM,EAAE;IAAA,EAAC;IAC/B,OAAO1B,WAAW;EACpB,CAAC;EAEH,OACC,KAAC,MAAM;IAAC,aAAa,EAAE;MAACZ,OAAO,EAAE,EAAE;MAAEJ,QAAQ,EAAE;IAAE,CAAE;IAClD,QAAQ,EAAE,kBAAC2C,MAAM,EAAI;MACnBb,oBAAoB,CAACa,MAAM,CAAC3C,QAAQ,EAAE2C,MAAM,CAACvC,OAAO,CAAC;IACrD,CAAE;IACJ,gBAAgB,EAAEP,gBAAiB;IACnC,eAAe,EAAE,IAAK;IAAA,UACjB;MAAA,IAAE+C,UAAU,SAAVA,UAAU;QAAEC,YAAY,SAAZA,YAAY;QAAEC,YAAY,SAAZA,YAAY;QAAEH,MAAM,SAANA,MAAM;QAAEI,MAAM,SAANA,MAAM;QAAEC,OAAO,SAAPA,OAAO;MAAA,OAClE;QAAA,WACI,MAAC,IAAI;UAAC,KAAK,EAAE;YAACC,MAAM,EAAE,EAAE;YAAEC,cAAc,EAAE,eAAe;YAAEC,aAAa,EAAE;UAAK,CAAE;UAAA,WAC7E,KAAC,KAAK;YAAC,MAAM,EAAE;cAACC,GAAG,EAAE3D,QAAQ,CAAC4D,KAAK,CAAC7C,YAAY,CAAC,GAAGA,YAAY,GAAGZ;YAAe,CAAE;YAAC,KAAK,EAAE;cAAC0D,MAAM,EAAE,GAAG;cAAEC,KAAK,EAAE;YAAG;UAAE,EAAE,EAC5H,KAAC,IAAI;YAAC,KAAK,EAAE;cAACC,IAAI,EAAE,CAAC;cAAEC,UAAU,EAAE;YAAE,CAAE;YAAA,UACvC,KAAC,SAAS;cAAC,KAAK,EAAE;gBAACC,QAAQ,EAAE;cAAE,CAAE;cAAC,WAAW,EAAC,iBAAiB;cAC9D,oBAAoB,EAAC,MAAM;cAC1B,SAAS,EAAE,IAAK;cAChB,YAAY,EAAEb,YAAY,CAAC,SAAS,CAAE;cACpC,MAAM,EAAED,UAAU,CAAC,SAAS,CAAE;cAC9B,KAAK,EAAED,MAAM,CAACvC;YAAQ;UACtB,EACK;QAAA,EACF,EACP,KAAC,OAAO;UAAC,KAAK,EAAE,CAAE;UAAC,WAAW,EAAC;QAAU,EAAE,EAC3C,KAAC,SAAS;UAAC,KAAK,EAAE;YAACsD,QAAQ,EAAE;UAAE,CAAE;UAAC,WAAW,EAAC,iBAAiB;UAC/D,QAAQ,EAAE,kBAAAC,CAAC;YAAA,OAAIlD,eAAe,CAACkD,CAAC,CAACC,WAAW,CAACC,IAAI,CAAC;UAAA,CAAC;UAClD,oBAAoB,EAAC,MAAM;UAC3B,YAAY,EAAEhB,YAAY,CAAC,UAAU,CAAE;UACpC,MAAM,EAAED,UAAU,CAAC,UAAU,CAAE;UAC/B,KAAK,EAAED,MAAM,CAAC3C;QAAS,EACxB,EACD+C,MAAM,CAAC/C,QAAQ,IACf,KAAC,IAAI;UAAC,KAAK,EAAE;YAAC0D,QAAQ,EAAE,EAAE;YAAEI,KAAK,EAAE;UAAK,CAAE;UAAA,UACvCf,MAAM,CAAC/C;QAAQ,EAElB,EACD,KAAC,MAAM;UAAC,OAAO,EAAE8C,YAAa;UAAC,KAAK,EAAC,OAAO;UAAC,QAAQ,EAAE,CAACE;QAAQ,EAAE;MAAA,EACpE;IAAA;EAAA,EAEC;AAEZ,CAAC;AAED,eAAe1C,kBAAkB"},"metadata":{},"sourceType":"module"}