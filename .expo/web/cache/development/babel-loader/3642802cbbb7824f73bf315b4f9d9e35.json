{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useNavigationHelpers;\nvar _routers = require(\"@react-navigation/routers\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\nvar _types = require(\"./types\");\nvar _UnhandledActionContext = _interopRequireDefault(require(\"./UnhandledActionContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n_types.PrivateValueStore;\nfunction useNavigationHelpers(_ref) {\n  var navigatorId = _ref.id,\n    onAction = _ref.onAction,\n    getState = _ref.getState,\n    emitter = _ref.emitter,\n    router = _ref.router;\n  var onUnhandledAction = React.useContext(_UnhandledActionContext.default);\n  var parentNavigationHelpers = React.useContext(_NavigationContext.default);\n  return React.useMemo(function () {\n    var dispatch = function dispatch(op) {\n      var action = typeof op === 'function' ? op(getState()) : op;\n      var handled = onAction(action);\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n    var actions = Object.assign({}, router.actionCreators, _routers.CommonActions);\n    var helpers = Object.keys(actions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(actions[name].apply(actions, arguments));\n      };\n      return acc;\n    }, {});\n    var navigationHelpers = Object.assign({}, parentNavigationHelpers, helpers, {\n      dispatch: dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : function () {\n        return true;\n      },\n      canGoBack: function canGoBack() {\n        var state = getState();\n        return router.getStateForAction(state, _routers.CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {},\n          routeGetIdList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      getId: function getId() {\n        return navigatorId;\n      },\n      getParent: function getParent(id) {\n        if (id !== undefined) {\n          var current = navigationHelpers;\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n          return current;\n        }\n        return parentNavigationHelpers;\n      },\n      getState: getState\n    });\n    return navigationHelpers;\n  }, [navigatorId, emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}","map":{"version":3,"sources":["useNavigationHelpers.tsx"],"names":["PrivateValueStore","useNavigationHelpers","id","navigatorId","onAction","getState","emitter","router","onUnhandledAction","React","useContext","UnhandledActionContext","parentNavigationHelpers","NavigationContext","useMemo","dispatch","op","action","handled","actions","actionCreators","CommonActions","helpers","Object","keys","reduce","acc","name","navigationHelpers","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","getId","getParent","undefined","current"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { CommonActions } from '@react-navigation/routers';\nimport * as React from 'react';\nimport NavigationContext from './NavigationContext';\nimport { PrivateValueStore } from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers(_ref) {\n  let {\n    id: navigatorId,\n    onAction,\n    getState,\n    emitter,\n    router\n  } = _ref;\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n  return React.useMemo(() => {\n    const dispatch = op => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n      const handled = onAction(action);\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions\n    };\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      // @ts-expect-error: name is a valid key, but TypeScript is dumb\n      acc[name] = function () {\n        return dispatch(actions[name](...arguments));\n      };\n      return acc;\n    }, {});\n    const navigationHelpers = {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : () => true,\n      canGoBack: () => {\n        const state = getState();\n        return router.getStateForAction(state, CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {},\n          routeGetIdList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      getId: () => navigatorId,\n      getParent: id => {\n        if (id !== undefined) {\n          let current = navigationHelpers;\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n          return current;\n        }\n        return parentNavigationHelpers;\n      },\n      getState\n    };\n    return navigationHelpers;\n  }, [navigatorId, emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}\n//# sourceMappingURL=useNavigationHelpers.js.map"]},"metadata":{},"sourceType":"script"}