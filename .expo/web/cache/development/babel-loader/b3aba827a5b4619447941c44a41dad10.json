{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useGestureHandlerRef;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _GestureHandlerRefContext = _interopRequireDefault(require(\"./GestureHandlerRefContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction useGestureHandlerRef() {\n  var ref = React.useContext(_GestureHandlerRefContext.default);\n  if (ref === undefined) {\n    throw new Error(\"Couldn't find a ref for gesture handler. Are you inside a screen in Stack?\");\n  }\n  return ref;\n}","map":{"version":3,"sources":["useGestureHandlerRef.tsx"],"names":["useGestureHandlerRef","ref","React","useContext","StackGestureRefContext","undefined","Error"],"mappings":";;;;;AAAA;AAEA;AAA+D;AAAA;AAEhD,SAASA,oBAAoB,GAAG;EAC7C,IAAMC,GAAG,GAAGC,KAAK,CAACC,UAAU,CAACC,iCAAsB,CAAC;EAEpD,IAAIH,GAAG,KAAKI,SAAS,EAAE;IACrB,MAAM,IAAIC,KAAK,CACb,4EAA4E,CAC7E;EACH;EAEA,OAAOL,GAAG;AACZ","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport StackGestureRefContext from './GestureHandlerRefContext';\nexport default function useGestureHandlerRef() {\n  const ref = React.useContext(StackGestureRefContext);\n  if (ref === undefined) {\n    throw new Error(\"Couldn't find a ref for gesture handler. Are you inside a screen in Stack?\");\n  }\n  return ref;\n}\n//# sourceMappingURL=useGestureHandlerRef.js.map"]},"metadata":{},"sourceType":"script"}